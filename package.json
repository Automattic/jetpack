{
	"name": "Jetpack_Monorepo",
	"private": true,
	"description": "[Jetpack](https://jetpack.com/) is a set of WordPress plugins that supercharges your self-hosted WordPress site with the awesome cloud power of [WordPress.com](https://wordpress.com).",
	"homepage": "https://jetpack.com",
	"bugs": {
		"url": "https://github.com/Automattic/jetpack/issues"
	},
	"repository": {
		"type": "git",
		"url": "https://github.com/Automattic/jetpack.git"
	},
	"license": "GPL-2.0-or-later",
	"author": "Automattic",
	"scripts": {
		"build": "printf '\\e[30;43m`pnpm run build` is deprected. Use the Jetpack CLI instead.\\e[0m\\n'; pnpm run install-if-deps-outdated && jetpack build packages && jetpack build plugins/jetpack",
		"build-concurrently": "printf '\\e[30;43m`pnpm run build-concurrently` is deprected. Use the Jetpack CLI instead.\\e[0m\\n'; pnpm run install-if-deps-outdated && jetpack build packages && jetpack build plugins/jetpack",
		"build-jetpack": "printf '\\e[30;43m`pnpm run build-jetpack` is deprected. Use the Jetpack CLI instead.\\e[0m\\n'; jetpack build plugins/jetpack",
		"build-jetpack-concurrently": "printf '\\e[30;43m`pnpm run build-jetpack-concurrently` is deprected. Use the Jetpack CLI instead.\\e[0m\\n'; jetpack build plugins/jetpack",
		"build-packages": "printf '\\e[30;43m`pnpm run build-packages` is deprected. Use the Jetpack CLI instead.\\e[0m\\n'; jetpack build packages",
		"build-php": "printf '\\e[30;43m`pnpm run build-php` is deprected. Use composer or the Jetpack CLI instead.\\e[0m\\n'; composer install --ignore-platform-reqs",
		"build-production": "printf '\\e[30;43m`pnpm run build-production` is deprected. Use the Jetpack CLI instead.\\e[0m\\n'; pnpm run install-if-deps-outdated && jetpack build --production packages && jetpack build --production plugins/jetpack",
		"build-production-concurrently": "printf '\\e[30;43m`pnpm run build-production-concurrently` is deprected. Use the Jetpack CLI instead.\\e[0m\\n'; pnpm run install-if-deps-outdated && jetpack build --production packages && jetpack build --production plugins/jetpack",
		"build-production-jetpack": "printf '\\e[30;43m`pnpm run build-production-jetpack` is deprected. Use the Jetpack CLI instead.\\e[0m\\n'; jetpack build --production plugins/jetpack",
		"build-production-jetpack-concurrently": "printf '\\e[30;43m`pnpm run build-production-jetpack-concurrently` is deprected. Use the Jetpack CLI instead.\\e[0m\\n'; jetpack build --production plugins/jetpack",
		"build-production-packages": "printf '\\e[30;43m`pnpm run build-production-packages` is deprected. Use the Jetpack CLI instead.\\e[0m\\n'; jetpack build --production packages && pnpm run validate-es5 -- ./projects/packages/tracking/",
		"build-production-php": "printf '\\e[30;43m`pnpm run build-production-php` is deprected. Use composer or the Jetpack CLI instead.\\e[0m\\n'; composer install --ignore-platform-reqs",
		"clean": "printf '\\e[30;43m`pnpm run clean` is deprecated. You probably want to run that in projects/plugins/jetpack instead.\\e[0m\\n'; cd projects/plugins/jetpack && pnpm run clean",
		"clean-composer": "printf '\\e[30;43m`pnpm run clean-composer` is deprecated and no longer does anything.\\e[0m\\n'",
		"clean-jetpack": "printf '\\e[30;43m`pnpm run clean-jetpack` is deprecated. You probably want to run `pnpm clean` in projects/plugins/jetpack instead.\\e[0m\\n'; cd projects/plugins/jetpack && pnpm run clean",
		"cli-install": "printf '\\e[30;43m`pnpm run cli-install` is deprecated and no longer necessary. Just do `pnpm install`.\\e[0m\\n'; pnpm install",
		"cli-link": "jetpack cli link",
		"cli-setup": "pnpm install && jetpack cli link",
		"cli-unlink": "jetpack cli unlink",
		"distclean": "printf '\\e[30;43m`pnpm run distclean` is deprecated.\\e[0m\\n'; rm -rf node_modules vendor && cd projects/plugins/jetpack && pnpm run distclean",
		"distclean-jetpack": "printf '\\e[30;43m`pnpm run distclean-jetpack` is deprecated.\\e[0m\\n'; cd projects/plugins/jetpack && pnpm run distclean",
		"docker:build": "docker run -it --rm -v \"${PWD}:/usr/src/app\" -w /usr/src/app \"node:$(cat .nvmrc)\" bash -c 'pnpm install && jetpack build packages && jetpack build plugins/jetpack'",
		"docker:build-image": "docker build -t automattic/jetpack-wordpress-dev tools/docker",
		"docker:clean": "pnpm run docker:compose -- down --rmi all -v && rm -rf tools/docker/wordpress/* tools/docker/wordpress/.htaccess tools/docker/wordpress-develop/* tools/docker/logs/* tools/docker/data/mysql/*",
		"docker:compose": "pnpm run docker:env && pnpm run docker:compose-volumes && pnpm run docker:compose-extras && docker-compose -f tools/docker/docker-compose.yml -f tools/docker/compose-volumes.built.yml -f tools/docker/compose-extras.yml",
		"docker:compose-extras": "[ -f tools/docker/compose-extras.yml ] || cp tools/docker/compose-extras.yml.sample tools/docker/compose-extras.yml",
		"docker:compose-volumes": "[ -f tools/docker/compose-volumes.yml ] || cp tools/docker/compose-volumes.yml.sample tools/docker/compose-volumes.yml; bash ./tools/compose-volumes.sh tools/docker/compose-volumes.yml > tools/docker/compose-volumes.built.yml",
		"docker:db": "pnpm run docker:compose -- exec wordpress bash -c \"mysql --defaults-group-suffix=docker\"",
		"docker:down": "pnpm run docker:compose down",
		"docker:env": "node -e \"require('fs').createWriteStream( 'tools/docker/.env', { flags: 'a' } );\"",
		"docker:install": "pnpm run docker:compose -- exec wordpress bash -c \"/var/scripts/install.sh\"",
		"docker:jt-config": "[ -f ./tools/docker/bin/jt/config.sh ] || { echo 'Tunneling scripts are not installed. See the section \"Jurassic Tube Tunneling Service\" in tools/docker/README.md.'; exit; }; ./tools/docker/bin/jt/config.sh",
		"docker:jt-down": "[ -f ./tools/docker/bin/jt/tunnel.sh ] || { echo 'Tunneling scripts are not installed. See the section \"Jurassic Tube Tunneling Service\" in tools/docker/README.md.'; exit; }; ./tools/docker/bin/jt/tunnel.sh break",
		"docker:jt-up": "[ -f ./tools/docker/bin/jt/tunnel.sh ] || { echo 'Tunneling scripts are not installed. See the section \"Jurassic Tube Tunneling Service\" in tools/docker/README.md.'; exit; }; ./tools/docker/bin/jt/tunnel.sh",
		"docker:multisite-convert": "pnpm run docker:compose -- exec wordpress bash -c \"/var/scripts/multisite-convert.sh\"",
		"docker:ngrok": "pnpm run docker:compose -- -f tools/docker/docker-compose-ngrok.yml",
		"docker:ngrok-down": "pnpm run docker:ngrok down",
		"docker:ngrok-up": "pnpm run docker:ngrok up",
		"docker:phpunit": "pnpm run docker:compose -- exec wordpress phpunit --configuration=/var/www/html/wp-content/plugins/jetpack/phpunit.xml.dist",
		"docker:phpunit:multisite": "pnpm run docker:compose -- exec wordpress phpunit --configuration=/var/www/html/wp-content/plugins/jetpack/tests/php.multisite.xml",
		"docker:run-extras": "pnpm run docker:compose -- exec wordpress bash -c \"chmod +x /var/scripts/run-extras.sh && . /var/scripts/run-extras.sh\"",
		"docker:sh": "pnpm run docker:compose exec wordpress bash",
		"docker:stop": "pnpm run docker:compose stop",
		"docker:tail": "pnpm run docker:compose exec wordpress bash -c \"/var/scripts/tail.sh\"",
		"docker:uninstall": "pnpm run docker:compose -- exec wordpress bash -c \"/var/scripts/uninstall.sh\"",
		"docker:up": "pnpm run docker:compose up",
		"docker:update-core-unit-tests": "pnpm run docker:compose -- exec wordpress svn up /tmp/wordpress-develop/tests/phpunit/data/ /tmp/wordpress-develop/tests/phpunit/includes",
		"docker:wp": "pnpm run docker:compose -- exec wordpress wp --allow-root --path=/var/www/html/",
		"install-if-deps-outdated": "pnpm install --no-prod --frozen-lockfile",
		"lint": "pnpm run lint-file -- .",
		"lint-changed": "tools/eslint-changed.js --ext .js,.jsx --git",
		"lint-file": "eslint --ext .js,.jsx",
		"lint-required": "node -e \"const fs = require('fs'); fs.copyFileSync('.eslintignore','.eslintignore-required'); const w=fs.createWriteStream('.eslintignore-required',{flags:'a'}); w.write('\\n# tools/eslint-excludelist.json\\n'); w.end(JSON.parse(fs.readFileSync('tools/eslint-excludelist.json','utf8')).join('\\n')+'\\n')\" && pnpm run lint -- --max-warnings=0 --ignore-path .eslintignore-required",
		"php:autofix": "composer phpcs:fix",
		"php:compatibility": "composer phpcs:compatibility",
		"php:lint": "composer phpcs:lint",
		"reformat-files": "prettier --ignore-path .eslintignore --write \"**/*.{js,jsx,json}\"",
		"test-spelling": "mdspell -n -a -x --en-us **/*.md",
		"validate-es5": "pnpx eslint --parser-options=ecmaVersion:5 --no-eslintrc --no-ignore",
		"version-packages": "bash ./tools/version-packages.sh"
	},
	"husky": {
		"hooks": {
			"pre-commit": "node tools/git-hooks/pre-commit-hook.js",
			"prepare-commit-msg": "node tools/git-hooks/prepare-commit-msg.js",
			"post-checkout": "./tools/git-hooks/post-merge-checkout-hook.sh",
			"post-merge": "./tools/git-hooks/post-merge-checkout-hook.sh"
		}
	},
	"browserslist": [
		"extends @wordpress/browserslist-config"
	],
	"dependencies": {
		"simple-git": "2.37.0"
	},
	"devDependencies": {
		"@wordpress/eslint-plugin": "7.4.0",
		"babel-eslint": "10.1.0",
		"commander": "7.2.0",
		"concurrently": "6.0.2",
		"eslint": "7.25.0",
		"eslint-config-prettier": "8.3.0",
		"eslint-config-wpcalypso": "6.1.0",
		"eslint-loader": "4.0.2",
		"eslint-plugin-es5": "1.5.0",
		"eslint-plugin-inclusive-language": "1.2.1",
		"eslint-plugin-jest": "24.3.6",
		"eslint-plugin-jsdoc": "32.3.3",
		"eslint-plugin-jsx-a11y": "6.4.1",
		"eslint-plugin-lodash": "7.2.0",
		"eslint-plugin-prettier": "3.4.0",
		"eslint-plugin-react": "7.23.2",
		"eslint-plugin-wpcalypso": "5.0.0",
		"glob": "7.1.6",
		"husky": "4.3.8",
		"jetpack-cli": "workspace:1.0.0",
		"parse-diff": "0.8.1",
		"prettier": "npm:wp-prettier@2.0.5",
		"semver": "7.3.5",
		"sort-package-json": "1.50.0"
	},
	"optionalDependencies": {
		"react": "16.13.1",
		"react-dom": "16.13.1"
	},
	"engines": {
		"node": "^14.16.0",
		"pnpm": "^6.3.0",
		"yarn": "use-pnpm-instead"
	},
	"pnpm": {
		"overrides": {
			"@automattic/calypso-build>node-sass@4.13.0": "^4.13.0",
			"yargs@^7.1.0>yargs-parser": "^20.0.0",
			"isomorphic-fetch@^2.1.1>node-fetch": "^2.6.1",
			"terser-webpack-plugin@^1.4.3>serialize-javascript": "^5.0.0",
			"terser-webpack-plugin@2.3.1>serialize-javascript": "^5.0.0",
			"jest-environment-jsdom@^24.0.0": "^26.0.1"
		}
	}
}
