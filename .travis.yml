# Travis CI Configuration File

# Tell Travis CI which distro to use
dist: trusty

# Tell Travis CI we're using PHP
language: php

services:
  - docker

# Run Matrix for these PHP versions
php:
- "5.6"
- "7.0"
- "7.2"
- "7.3"
- "7.4snapshot"

env:
  global:
  # Global variable is re-defined in matrix-include -list
  - WP_TRAVISCI=phpunit
  # Tell Composer that the version is "dev-master" to avoid it guessing for the monorepo packages.
  - COMPOSER_ROOT_VERSION=dev-master
  # Run phpunit in Travis matrix for these combinations
  matrix:
  - WP_BRANCH=master SIMPLE_AND_MULTISITE=1 # SIMPLE_AND_MULTISITE is just a way to explicitly mention that we run both suites
  - WP_BRANCH=latest
  - WP_BRANCH=previous PHP_LINT=1

# Define a matrix of additional build configurations
# The versions listed above will automatically create our first configuration,
# so it doesn't need to be re-defined below.
matrix:
  fast_finish: true
  include:
  - if: branch !~ /(^branch-.*-built)/
    name: "JavaScript & CSS lint"
    language: node_js
    env: WP_TRAVISCI="yarn lint"
  - if: branch !~ /(^branch-.*-built)/
    name: "Danger CI, test dashboard, extensions and search"
    language: node_js
    env: WP_TRAVISCI="yarn test-dangerci-and-adminpage-and-extensions-and-search"
  - if: branch !~ /(^branch-.*-built)/
    name: "Build dashboard & extensions"
    language: node_js
    env: WP_TRAVISCI="yarn build-concurrently"

  # Disable for now until we fix all the spelling issues
  # - name: "Spell check Markdown files"
  #   if: branch !~ /(^branch-.*-built)/
  #   language: node_js
  #   env: WP_TRAVISCI="yarn test-spelling"

  - name: "PHP Nightly"
    php: "nightly"

  # Code Climate code coverage.
  - name: "Code Coverage"
    php: "7.3"
    env:
      - WP_BRANCH=latest
      - DO_COVERAGE=true
    before_script:
      - export PATH="$HOME/.composer/vendor/bin:$PATH"
      - export PLUGIN_SLUG=$(basename $(pwd))
      - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
      - chmod +x ./cc-test-reporter
      - ./cc-test-reporter before-build
      - ./tests/setup-travis.sh
      - nvm install 12
      - yarn install
    script:
      - ./tests/run-travis.sh
      - yarn nyc --reporter=lcov -x '_inc/**/**/test/*.js' --report-dir=coverage/adminpage yarn test-adminpage
      - yarn test-extensions --coverage --collectCoverageFrom='extensions/**/*.js'
    after_script:
      - ./tests/process-coverage.sh

  - php: "7.0"
    name: "Legacy full sync"
    env: LEGACY_FULL_SYNC=1 WP_BRANCH=latest

  - name: "E2E tests"
    language: generic
    dist: xenial # kinda workaround for wp-env dependencies
    # Since build secrets are not available for forks, we would not be able to (and don't want) decrypt the config file
    # so we just skip the E2E job all together
    if: branch !~ /(^branch-.*-built)/ AND env(RUN_E2E) = true AND fork = false
    before_script:
    - nvm install
    - yarn build-production-concurrently
    - ./tests/e2e/bin/env.sh start
    - yarn test-decrypt-config
    script:
    - yarn test-e2e
    after_script:
    - ./tests/e2e/bin/push-allure-artifacts.sh
    addons:
      apt:
        sources:
          - sourceline: ppa:qameta/allure
        packages:
          - allure
          - zip

  - name: "E2E tests with latest Gutenberg"
    language: generic
    dist: xenial
    env: LATEST_GUTENBERG=1
    if: branch !~ /(^branch-.*-built)/ AND env(RUN_E2E) = true AND fork = false
    before_script:
    - nvm install
    - yarn build-production-concurrently
    - ./tests/e2e/bin/env.sh start
    - yarn test-decrypt-config
    script:
    - yarn test-e2e --testPathIgnorePatterns=updater

  allow_failures:
    - name: "PHP Nightly"
    - name: "Spell check Markdown files"
    - name: "Code Coverage"
    - name: "E2E tests with latest Gutenberg"

cache:
  directories:
   - $HOME/.composer/cache/files
   - $HOME/.cache/yarn
   - $HOME/.phpbrew

# whitelist branches for the "push" build check
branches:
  only:
    - master
    - master-stable
    - /^branch-.*$/
    - /^feature\/.*$/

# Git clone depth
# By default Travis CI clones repositories to a depth of 50 commits
git:
  depth: 1

before_script:
  - export PLUGIN_SLUG=$(basename $(pwd))
  - export PATH="$HOME/.composer/vendor/bin:$PATH"
  - ./tests/setup-travis.sh

script: ./tests/run-travis.sh

sudo: false

notifications:
   slack:
     if: branch = master
     on_success: change # default: always
     on_pull_requests: false
     secure: WWKijFuetJgC7Gam4RkZALUf5lhDPWOkXCD2ignA4qLzlATUbi8lNjkBxMEq0Y8wKBLdHdRostmZl1eBXdWF4J6PEX1pbKrTweBlEG0Ka7QEW+62/eMnCJzWazKmtZvr5ILKGz8zf7ig+q/URoEejWSmkbN1HMHvDCT2DtIZN7I=
   webhooks:
     urls:
       - https://betadownload.jetpack.me/travis.php
     on_success: always # Beta builder needs notifications for successful builds
   email:
     on_success: never # default: change
     recipients:
       - enej.bajgoric@automattic.com
       - georgestephanis@automattic.com
       - miguel@automattic.com
       - rocco@automattic.com
       - smart@automattic.com
       - eric.binnion@automattic.com
       - allendav@automattic.com
       - beau@automattic.com
       # Encrypted Slack notification address
       - secure: "WQdTdmYuifSW0hiJGXpQGKystMASC50QvxHlyUL5SM3h5GP8aCgeSsHuXvKPe3dT3Pffhk0dSHBfDtdWFwSHW/upURhg0vs4dm7+nxxvGZiTPzKcuAIjgvCoqWM7teyda/XqFGNSnv+XsT34uoyPhhFgd45T3oS+QQ3aNCruFak="
addons:
  code_climate:
    repo_token: 683bd559e5214ca3b721092af177893f05765ba90d2589fcf35d7e85c6ea01e8
