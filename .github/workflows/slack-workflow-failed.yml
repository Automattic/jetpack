name: CI Results
on:
  workflow_run:
    types: [ 'completed' ]
    workflows:
      - Build
      - Build Docker
      - Tests
      - Gardening
      - PR is up-to-date
    branches: [ 'trunk', '*/branch-*' ]

jobs:
  notify:
    name: Notify failure
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}

    steps:
      - name: Generate message
        id: message
        run: |
          echo -n "::set-output name=message::"
          jq -nc --slurpfile event "$GITHUB_EVENT_PATH" '$event[0] as $e | $e.workflow_run as $run | {
            icon_emoji: ":github-rejected:",
            text: "*\( $e.workflow.name ) failed on \( $run.head_branch )*\n<\( $run.html_url )|Run #\( $run.id )>",
            blocks: [
              {
                type: "section",
                text: {
                  type: "mrkdwn",
                  text: "*\( $e.workflow.name ) failed on \( $run.head_branch )*"
                }
              },
              {
                type: "context",
                elements: [
                  {
                    type: "plain_text",
                    text: "Commit: \( $run.head_commit.id[0:8] ) \( $run.head_commit.message | sub( "\n.*"; ""; "m" ) )",
                    emoji: false
                  },
                  {
                    type: "plain_text",
                    text: "Author: \( $run.head_commit.author.name )",
                    emoji: false
                  },
                  {
                    type: "plain_text",
                    text: "Duration: \( ( $run.updated_at | fromdateiso8601 ) - ( $run.run_started_at | fromdateiso8601 ) | strftime( "%H:%M:%S" ) )"
                  }
                ]
              },
              {
                type: "actions",
                elements: [
                  {
                    type: "button",
                    text: {
                      type: "plain_text",
                      text: "Run #\( $run.id )"
                    },
                    url: $run.html_url
                  },
                  {
                    type: "button",
                    text: {
                      type: "plain_text",
                      text: "Commit"
                    },
                    url: "\( $run.head_repository.html_url )/commit/\( $run.head_commit.id )"
                  },
                  (
                    $run.head_commit.message | sub( "\n.*"; ""; "m" ) | match( " \\(#([0-9]+)\\)$" ).captures[0].string | {
                      type: "button",
                      text: {
                        type: "plain_text",
                        text: "PR #\(.)"
                      },
                      url: "\( $run.head_repository.html_url )/pull/\(.)"
                    }
                  )
                ]
              }
            ]
          }'

      - name: Send message to alerts channel
        uses: slackapi/slack-github-action@v1.19.0
        if: github.event.workflow_run.head_branch == 'trunk'
        with:
          channel-id: ${{ secrets.SLACK_JP_ALERTS_CHANNEL }}
          payload: ${{ steps.message.outputs.message }}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_TOKEN }}

      - name: Send message to releases channel
        uses: slackapi/slack-github-action@v1.19.0
        if: contains( github.event.workflow_run.head_branch, '/branch-' )
        with:
          channel-id: ${{ secrets.SLACK_RELEASES_CHANNEL }}
          payload: ${{ steps.message.outputs.message }}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_TOKEN }}
