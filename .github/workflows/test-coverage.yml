name: Code Coverage
on:
  pull_request:
    paths-ignore:
      - '**.md'
  push:
    branches: [ 'master', '*/branch-*' ]
    paths-ignore:
      - '**.md'

env:
  COMPOSER_ROOT_VERSION: "dev-master"
  DO_COVERAGE: true
  CC_TEST_REPORTER_ID: 683bd559e5214ca3b721092af177893f05765ba90d2589fcf35d7e85c6ea01e8

jobs:
  run-tests:
    name: "Code coverage"
    runs-on: ubuntu-latest
    services:
      database:
        image: mysql:5.6
        env:
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5
    timeout-minutes: 30  # 2021-01-18: Successful runs seem to take ~20 minutes
    env:
      WP_BRANCH: latest

    steps:
      - uses: actions/checkout@v2
        with:
          # codecov.io requires a fetch depth > 1.
          fetch-depth: 2

      - name: Read desired PHP and Node versions
        id: versions
        run: |
          PHP_VERSION="$(<.github/php-version)"
          echo "PHP_VERSION=$PHP_VERSION" >> $GITHUB_ENV
          echo "::set-output name=php::${PHP_VERSION}"
          NODE_VERSION="$(<.nvmrc)"
          echo "NODE_VERSION=$NODE_VERSION" >> $GITHUB_ENV
          echo "::set-output name=node::${NODE_VERSION}"

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ steps.versions.outputs.php }}
          tools: composer
          extensions: mysql, imagick
          coverage: none

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ steps.versions.outputs.node }}

      - name: Get Composer cache directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Use composer cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Use yarn cache
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: /home/runner/.cache/yarn/v6
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      # As suggested here https://github.com/codeclimate/test-reporter/issues/406#issuecomment-578483422
      - name: Set ENV for CodeClimate (pull_request)
        if: github.event_name == 'pull_request'
        run: |
          git fetch --no-tags --prune --depth=1 origin +refs/heads/$GITHUB_HEAD_REF:refs/remotes/origin/$GITHUB_HEAD_REF
          echo "GIT_BRANCH=$GITHUB_HEAD_REF" >> $GITHUB_ENV
          echo "GIT_COMMIT_SHA=$(git rev-parse origin/$GITHUB_HEAD_REF)" >> $GITHUB_ENV

      - name: Set ENV for CodeClimate (push)
        if: github.event_name == 'push'
        run: |
          echo "GIT_BRANCH=$GITHUB_REF" >> $GITHUB_ENV
          echo "GIT_COMMIT_SHA=$GITHUB_SHA" >> $GITHUB_ENV

      - name: Init code climate
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
          ./cc-test-reporter before-build

      - name: Setup WordPress environment for plugin tests
        run: .github/files/setup-wordpress-env.sh

      - name: Tool versions
        run: |
          which php
          php --version
          which phpdbg
          phpdbg --version
          which composer
          composer --version
          which node
          node --version
          which yarn
          yarn --version

      - name: Run project tests
        run: |
          EXIT=0
          mkdir artifacts
          mkdir coverage
          for P in projects/*/*/composer.json; do
            DIR="${P%/composer.json}"
            SLUG="${DIR#projects/}"

            if [[ "${SLUG%%/*}" == "plugins" ]]; then
              # Plugins run from the WordPress checkout, not the monorepo checkout.
              DIR="/tmp/wordpress-${{ env.WP_BRANCH }}/src/wp-content/$SLUG"
            fi

            if ! jq '.scripts["test-coverage"] || false' "$P" > /dev/null; then
              echo "Skipping $SLUG, no test script is defined in composer.json"
            else
              echo "::group::Running tests for $SLUG"
              mkdir -p "artifacts/$SLUG"
              export ARTIFACTS_DIR="$GITHUB_WORKSPACE/artifacts/$SLUG"
              mkdir -p "coverage/$SLUG"
              export COVERAGE_DIR="$GITHUB_WORKSPACE/coverage/$SLUG"
              FAIL=false
              if ! composer run --timeout=0 --working-dir="$DIR" test-coverage; then
                FAIL=true
                EXIT=1
              fi
              echo "::endgroup::"
              $FAIL && echo "::error::Tests for $SLUG failed!"
            fi
          done
          exit $EXIT

      - name: Check for artifacts
        id: check-artifacts
        # Default for `if` is `success()`, we want this to run always.
        if: always()
        run: |
          [[ -d artifacts ]] && find artifacts -type d -empty -delete
          if [[ -d artifacts ]]; then
            echo "::set-output name=any::true"
          else
            echo "::set-output name=any::false"
          fi

      - name: Upload artifacts
        if: always() && steps.check-artifacts.outputs.any == 'true'
        uses: actions/upload-artifact@v2
        with:
          name: artifacts
          path: artifacts
          retention-days: 7

      - name: Process coverage results
        run: ./.github/files/process-coverage.sh
