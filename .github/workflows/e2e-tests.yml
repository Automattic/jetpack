name: E2E Tests

on:
  pull_request:
    paths-ignore:
    - '**.md'
  push:
    branches: [master]
    paths-ignore:
    - '**.md'

concurrency:
  group: e2e-tests-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  create-projects-matrix:
    name: "Determine tests matrix"
    runs-on: ubuntu-latest
    timeout-minutes: 1
    outputs:
      matrix: ${{ steps.create-projects-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
      # For pull requests, list-changed-projects.php needs the merge base.
      - name: Deepen to merge base
        if: github.event_name == 'pull_request'
        uses: ./.github/actions/deepen-to-merge-base

      - id: create-projects-matrix
        run: |
          PROJECTS='[{"project":"Jetpack","path":"projects/plugins/jetpack/tests/e2e"},{"project":"Boost","path":"projects/plugins/boost/tests/e2e"}]'
          echo $PROJECTS

          # Check changed projects and decide which e2e tests should run
          CHANGED_PROJECTS="$(.github/files/list-changed-projects.php --debug)"
          echo $CHANGED_PROJECTS

          echo "::set-output name=matrix::$PROJECTS"

  e2e-tests:
    name: "${{ matrix.project }} e2e tests"
    runs-on: ubuntu-latest
    needs: create-projects-matrix
    timeout-minutes: 25
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson( needs.create-projects-matrix.outputs.matrix ) }}
    if: github.event.pull_request.head.repo.full_name == github.event.pull_request.base.repo.full_name

    steps:
    - uses: actions/checkout@v2

    - name: Setup tools
      uses: ./.github/actions/tool-setup

    - name: Install monorepo
      run: |
        pnpm install

    - name: Test environment set-up
      working-directory: ${{ matrix.path }}
      env:
        CONFIG_KEY: ${{ secrets.E2E_CONFIG_KEY }}
        COMPOSER_ROOT_VERSION: "dev-master"
      run: |
        echo "::group::Install e2e project"
        pnpm install
        echo "::endgroup::"

        echo "::group::Build plugin(s)"
        pnpm run build
        echo "::endgroup::"

        echo "::group::Decrypt config"
        pnpm run config:decrypt
        echo "::endgroup::"

        echo "::group::Start docker environment"
        pnpm run env:up
        echo "::endgroup::"

        echo "::group::Create tunnel"
        pnpm run tunnel:up
        echo "::endgroup::"

    - name: Run ${{ matrix.project }} tests
      working-directory: ${{ matrix.path }}
      run: pnpm run test-e2e

    - name: Send Slack notification
      if: ${{ always() }}
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
        SUITE: ${{ matrix.project }}
      working-directory: ${{ matrix.path }}
      run: pnpm run slack -- suite $SUITE

    - name: Test environment tear-down
      if: ${{ always() }}
      working-directory: ${{ matrix.path }}
      continue-on-error: true
      run: |
        pnpm run tunnel:down

    - name: Upload test artifacts
      if: ${{ always() }}
      continue-on-error: true
      uses: actions/upload-artifact@v2
      with:
        name: test-output-${{ matrix.group }}
        path: ${{ matrix.path }}/output


