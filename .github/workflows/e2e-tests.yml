name: E2E Tests

on:
  pull_request:
    paths-ignore:
    - '**.md'
  push:
    branches: [master]
    paths-ignore:
    - '**.md'

jobs:
  e2e-tests:
    name: "E2E tests: with ${{ matrix.gutenberg }} plugin"
    runs-on: ubuntu-latest
    timeout-minutes: 20  # 2021-01-18: Successful runs seem to take 9-12 minutes
    strategy:
      fail-fast: false
      matrix:
        gutenberg: [ 'no', 'latest' ]
    env:
      GUTENBERG: ${{ matrix.gutenberg }}
    if: github.event.pull_request.head.repo.full_name == github.event.pull_request.base.repo.full_name

    steps:
    - uses: actions/checkout@v2

    - name: Read PHP and Node versions
      id: versions
      run: |
        echo "::set-output name=php-version::$(<.github/php-version)"
        echo "::set-output name=node-version::$(<.nvmrc)"

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ steps.versions.outputs.php-version }}
        tools: composer
        extensions: mysql, imagick
        coverage: none

    - name: Setup Node
      uses: actions/setup-node@v2
      with:
        node-version: ${{ steps.versions.outputs.node-version }}

    - name: Get Composer cache directory
      id: composer-cache
      run: |
        echo "::set-output name=dir::$(composer config cache-files-dir)"
    - name: Use composer cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - name: Use yarn cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Tool versions
      run: |
        which php
        php --version
        which composer
        composer --version
        which node
        node --version
        which yarn
        yarn --version
        which jq
        jq --version

    - name: Build Production Jetpack
      working-directory: projects/plugins/jetpack
      run: yarn build-production-concurrently

    - name: Set up environment
      working-directory: projects/plugins/jetpack/tests/e2e
      env:
        NGROK_KEY: ${{ secrets.NGROK_KEY }}
        CONFIG_KEY: ${{ secrets.E2E_CONFIG_KEY }}
      run: |
        yarn install
        yarn test-decrypt-config
        ./bin/env.sh start

    - name: Run all tests
      if: matrix.gutenberg == 'no'
      working-directory: projects/plugins/jetpack/tests/e2e
      run: yarn test-e2e

    - name: Run only blocks tests with latest Gutenberg
      if: matrix.gutenberg == 'latest'
      working-directory: projects/plugins/jetpack/tests/e2e
      run: yarn test-e2e --testNamePattern=blocks

    - name: Upload test artifacts
      if: ${{ always() }}
      continue-on-error: true
      uses: actions/upload-artifact@v2
      with:
        name: test-output-${{ matrix.gutenberg }}
        path: projects/plugins/jetpack/tests/e2e/output
