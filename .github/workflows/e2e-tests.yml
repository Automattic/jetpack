name: E2E Tests

on:
  pull_request:
    paths-ignore:
    - '**.md'
  push:
    branches: [master]
    paths-ignore:
    - '**.md'
  schedule:
    - cron:  '0 */12 * * *'
concurrency:
  group: e2e-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  create-matrix:
    name: "Determine tests matrix"
    runs-on: ubuntu-latest
    timeout-minutes: 1  # 2021-02-03: Should only take a second.
    outputs:
      matrix: ${{ steps.create-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
      - id: create-matrix
        run: |
          MATRIX='[{"group":"pre-connection" },{"group":"connection" },{"group":"post-connection" }]'
          if [ ${{ github.event_name }} == schedule ]; then
            MATRIX=$(echo $MATRIX | jq '. + [{"group": "gutenberg"}]' | jq -c .)
          fi
          echo $MATRIX
          echo "::set-output name=matrix::$MATRIX"


  e2e-tests:
    name: "E2E ${{ matrix.group }} tests"
    runs-on: ubuntu-latest
    needs: create-matrix
    timeout-minutes: 25  # 2021-04-16: Successful runs seem to take 11-17 minutes
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson( needs.create-matrix.outputs.matrix ) }}
    env:
      GUTENBERG: bundle # default value. Can be overridden later based on matrix.group value
    if: github.event.pull_request.head.repo.full_name == github.event.pull_request.base.repo.full_name

    steps:
    - uses: actions/checkout@v2

    - name: Read tool versions
      id: versions
      run: |
        echo "::set-output name=php-version::$(<.github/php-version)"
        echo "::set-output name=pnpm-version::$(<.github/pnpm-version)"
        echo "::set-output name=node-version::$(<.nvmrc)"

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ steps.versions.outputs.php-version }}
        tools: composer
        extensions: mysql, imagick
        coverage: none

    - name: Setup Node
      uses: actions/setup-node@v2
      with:
        node-version: ${{ steps.versions.outputs.node-version }}

    - name: Get Composer cache directory
      id: composer-cache
      run: |
        echo "::set-output name=dir::$(composer config cache-files-dir)"
    - name: Use composer cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-

    - name: Use pnpm cache
      uses: actions/cache@v2
      with:
        path: ~/.pnpm-store
        key: ${{ runner.os }}-pnpm-${{ steps.versions.outputs.node-version }}-${{ hashFiles('**/package.json') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-${{ steps.versions.outputs.node-version }}-

    - name: Setup pnpm
      uses: pnpm/action-setup@v2.0.1
      with:
        version: ${{ steps.versions.outputs.pnpm-version }}

    - name: Tool versions
      run: |
        which php
        php --version
        which composer
        composer --version
        which node
        node --version
        which pnpm
        pnpm --version
        which jq
        jq --version

    - name: Build Production Jetpack
      run: |
        pnpm install
        pnpx jetpack build plugins/jetpack -v --production

    - name: Environment set-up
      working-directory: projects/plugins/jetpack/tests/e2e
      env:
        CONFIG_KEY: ${{ secrets.E2E_CONFIG_KEY }}
      run: |
        pnpm install
        pnpm run test-decrypt-config
        pnpm run env-start
        pnpm run tunnel-on

    - name: Set up Gutenberg
      if: matrix.group == 'gutenberg'
      working-directory: projects/plugins/jetpack/tests/e2e
      run: ./bin/env.sh gb-setup

    - name: Run ${{ matrix.group }} tests
      working-directory: projects/plugins/jetpack/tests/e2e
      run: pnpm run test-e2e -- --group=${{ matrix.group }}

    - name: Environment tear-down
      if: ${{ always() }}
      working-directory: projects/plugins/jetpack/tests/e2e
      continue-on-error: true
      run: |
        pnpm run tunnel-off
        pnpm run pm2 -- logs --nostream --lines 10000 > output/logs/tunnel.log

    - name: Upload test artifacts
      if: ${{ always() }}
      continue-on-error: true
      uses: actions/upload-artifact@v2
      with:
        name: test-output-${{ matrix.group }}
        path: projects/plugins/jetpack/tests/e2e/output

    - uses: testspace-com/setup-testspace@v1
      with:
        domain: ${{github.repository_owner}}
      if: always()
    - name: Publish to Testspace
      working-directory: projects/plugins/jetpack/tests/e2e
      run: |
        testspace "[${{ matrix.group }}]output/reports/junit-*.xml"
      if: always()

    - name: Send Slack notification
      if: ${{ failure() }}
      working-directory: projects/plugins/jetpack/tests/e2e
      run: NODE_ENV=test node ./bin/slack.js run ${{ matrix.group }}

  slack-notification:
    name: "Slack notification"
    runs-on: ubuntu-latest
    needs: e2e-tests
    env:
      CONFIG_KEY: ${{ secrets.E2E_CONFIG_KEY }}

    steps:
      - uses: actions/checkout@v2

      - name: Send Slack notification
        working-directory: projects/plugins/jetpack/tests/e2e
        run: |
          pnpm install
          pnpm run test-decrypt-config
          NODE_ENV=test node ./bin/slack.js job ${{needs.e2e-tests.result}}
