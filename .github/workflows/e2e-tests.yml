name: E2E Tests

on:
  pull_request:
    paths-ignore:
    - '**.md'
  push:
    branches: [master]
    paths-ignore:
    - '**.md'
  schedule:
    - cron: '0 */12 * * *' # gutenberg run, every 12 hours - if you update this, also update it in .github/files/create-e2e-projects-matrix.sh
    - cron: '0 */4 * * *' # atomic run, every 4 hours - if you update this, also update it in .github/files/create-e2e-projects-matrix.sh

concurrency:
  group: e2e-tests-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  create-projects-matrix:
    name: "Determine tests matrix"
    runs-on: ubuntu-latest
    timeout-minutes: 3
    outputs:
      matrix: ${{ steps.create-matrix.outputs.matrix }}
      runName: ${{ steps.create-matrix.outputs.runName }}
    steps:
      - uses: actions/checkout@v2

      # For pull requests, list-changed-projects.sh needs the merge base.
      - name: Deepen to merge base
        if: github.event_name == 'pull_request'
        uses: ./.github/actions/deepen-to-merge-base

      - name: Setup tools
        uses: ./.github/actions/tool-setup

      - name: Install monorepo
        run: |
          pnpm install

      - name: Create projects matrix
        id: create-matrix
        env:
          CRON: github.event.schedule
        run: |
          OUT="$(.github/files/create-e2e-projects-matrix.sh)"
          RUN_NAME=$(jq -r ".run" <<<"$OUT")
          MATRIX=$(jq -r ".matrix" <<<"$OUT")
          echo "::set-output name=runName::$RUN_NAME"
          echo "::set-output name=matrix::$PROJECTS"

  e2e-tests:
    name: "${{ matrix.project }} e2e tests"
    runs-on: ubuntu-latest
    needs: create-projects-matrix
    timeout-minutes: 25
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson( needs.create-projects-matrix.outputs.matrix ) }}
    if: github.event.pull_request.head.repo.full_name == github.event.pull_request.base.repo.full_name

    steps:
    - uses: actions/checkout@v2

    - name: Setup tools
      uses: ./.github/actions/tool-setup

    - name: Install monorepo
      run: |
        pnpm install

    - name: Test environment set-up
      working-directory: ${{ matrix.path }}
      env:
        CONFIG_KEY: ${{ secrets.E2E_CONFIG_KEY }}
        COMPOSER_ROOT_VERSION: "dev-master"
      run: |
        echo "::group::Install e2e project"
        pnpm install
        echo "::endgroup::"

        echo "::group::Build plugin(s)"
        pnpm run build
        echo "::endgroup::"

        echo "::group::Decrypt config"
        pnpm run config:decrypt
        echo "::endgroup::"

        echo "::group::Start docker environment"
        pnpm run env:up
        echo "::endgroup::"

        echo "::group::Create tunnel"
        pnpm run tunnel:up
        echo "::endgroup::"

    - name: Run ${{ matrix.project }} tests
      working-directory: ${{ matrix.path }}
      env:
        TEST_ARGS: ${{ matrix.args }}
      run: pnpm run test-e2e -- "${ARGS}"

    - name: Send Slack notification
      if: ${{ always() }}
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
        SUITE: ${{ matrix.project }}
      working-directory: ${{ matrix.path }}
      run: pnpm run slack -- suite $SUITE

    - name: Test environment tear-down
      if: ${{ always() }}
      working-directory: ${{ matrix.path }}
      continue-on-error: true
      run: |
        pnpm run tunnel:down

    - name: Upload test artifacts
      if: ${{ always() }}
      continue-on-error: true
      uses: actions/upload-artifact@v2
      with:
        name: test-output-${{ matrix.group }}
        path: ${{ matrix.path }}/output

  test-reports:
    name: "Trigger test report workflow"
    runs-on: ubuntu-latest
    if: ${{ ! cancelled() }}
    needs: [create-projects-matrix, e2e-tests]

    steps:
      - uses: actions/checkout@v2

      - name: Trigger test report workflow
        uses: ./.github/actions/test-report-dispatch
        with:
          token: ${{ secrets.E2E_TEST_REPORTS_TOKEN }}
          event_type: e2e
          report_name: ${{needs.create-projects-matrix.outputs.runName}}


