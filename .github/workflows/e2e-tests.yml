name: E2E Tests

on:
  pull_request:
    paths-ignore:
    - '**.md'
  push:
    branches: [master]
    paths-ignore:
    - '**.md'

jobs:
  e2e-tests:
    name: "E2E tests: with ${{ matrix.gutenberg }} plugin"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        gutenberg: [ 'no', 'latest' ]
    env:
      GUTENBERG: ${{ matrix.gutenberg }}

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: '12'
    - uses: shivammathur/setup-php@v2
      with:
        php-version: '7.4'
        tools: composer
        coverage: none

    - name: Use yarn cache
      uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: /home/runner/.cache/yarn/v6
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Use composer cache
      uses: actions/cache@v2
      with:
        path: /home/runner/.composer/cache/files
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-

    - name: Build Production Jetpack
      run: yarn build-production-concurrently

    - name: Set up environment
      env:
        NGROK_KEY: ${{ secrets.NGROK_KEY }}
        CONFIG_KEY: ${{ secrets.E2E_CONFIG_KEY }}
      run: |
        yarn test-decrypt-config
        ./projects/plugins/jetpack/tests/e2e/bin/env.sh start

    - name: Run tests
      if: matrix.gutenberg == 'no'
      run: yarn test-e2e

    - name: Run tests (excluding updater)
      if: matrix.gutenberg == 'latest'
      run: yarn test-e2e --testPathIgnorePatterns=updater

    - name: Upload Allure artifacts
      if: matrix.gutenberg == 'no' && always()
      continue-on-error: true
      env:
        ALLURE_VERSION: 2.13.5
        ALLURE_REPO: "https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline"
        GH_TEST_REPORT_TOKEN: ${{ secrets.GH_TEST_REPORT_TOKEN }}
      run: |
        curl -o allure.tgz -Ls $ALLURE_REPO/$ALLURE_VERSION/allure-commandline-$ALLURE_VERSION.tgz
        tar -zxf allure.tgz -C /opt/
        sudo ln -s /opt/allure-$ALLURE_VERSION/bin/allure /usr/bin/allure

        ./projects/plugins/jetpack/tests/e2e/bin/push-allure-artifacts.sh
