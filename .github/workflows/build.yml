name: Build
on: push

jobs:
  build:
    name: Build all projects
    runs-on: ubuntu-latest
    timeout-minutes: 10  # 2021-01-18: Successful runs seem to take 5-7 minutes
    steps:
      - uses: actions/checkout@v2

      - uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          tools: composer
          coverage: none

      # Use the specifically required node version for this build
      - name: Read version from .nvmrc
        id: node-version
        run: echo "::set-output name=node-version::$(<.nvmrc)"
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ steps.node-version.outputs.node-version }}

      - name: Use yarn cache
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: /home/runner/.cache/yarn/v6
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Use composer cache
        uses: actions/cache@v2
        with:
          path: /home/runner/.composer/cache/files
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Build all projects
        id: build
        env:
          # Hard-code a specific directory to avoid paths in vendor/composer/installed.json changing every build.
          BUILD_BASE: /tmp/jetpack-build
        run: .github/files/build-all-projects.sh

      # GitHub's artifact stuff doesn't preserve permissions or file case. Sigh.
      # This is the official workaround: https://github.com/actions/upload-artifact#maintaining-file-permissions-and-case-sensitive-files
      # It'll also make it faster to upload and download though, so maybe it's a win anyway.
      - name: Create archive
        run: tar --owner=0 --group=0 --xz -cvvf build.tar.xz -C "${{ steps.build.outputs.build-base }}" --transform 's,^\.,build,' .

      - name: Store build as artifact
        uses: actions/upload-artifact@v2
        with:
          name: jetpack-build
          path: build.tar.xz
          # Only need to retain for a day since the beta builder slurps it up to distribute.
          retention-days: 1

  jetpack_beta:
    name: Create artifact for Jetpack Beta plugin
    runs-on: ubuntu-latest
    needs: build
    if: github.event.pull_request.head.repo.full_name == github.event.pull_request.base.repo.full_name
    timeout-minutes: 15  # 2021-01-18: Successful runs seem to usually take ~2 minutes, but sometimes the upload is slow and it takes 12.
    steps:
      - uses: actions/checkout@v2
        with:
          path: monorepo

      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: jetpack-build
      - name: Extract build archive
        run: tar --xz -xvvf build.tar.xz

      # The beta plugin needs the base directory name to be "jetpack-dev"
      - name: Extract Jetpack
        run: |
          mkdir -p to-upload
          mv "build/Automattic/jetpack-production" to-upload/jetpack-dev

      - name: Add test files and version
        id: version
        run: |
          for file in to-test.md docs/testing/testing-tips.md; do
            mkdir -p "$(dirname "to-upload/jetpack-dev/$file")"
            cp "monorepo/$file" "to-upload/jetpack-dev/$file"
          done

          # Current version must compare greather than any previously used current version for this PR.
          # Assume GH run IDs are monotonic.
          CURRENT_VERSION=$(monorepo/tools/plugin-version.sh to-upload/jetpack-dev/)-${GITHUB_RUN_ID}-g$(cd monorepo && git rev-parse --short HEAD)
          echo "Using version $CURRENT_VERSION"
          echo "::set-output name=version::$CURRENT_VERSION"
          echo "$CURRENT_VERSION" > to-upload/jetpack-dev/version.txt
          # Don't use plugin-version.sh here, updating JETPACK__VERSION would clutter stats.
          sed -i -e 's/Version: .*$/Version: '"$CURRENT_VERSION"'/' to-upload/jetpack-dev/jetpack.php

      - name: Upload Jetpack build
        uses: actions/upload-artifact@v2
        with:
          name: jetpack-dev
          path: to-upload
          # Only need to retain for a day since the beta builder slurps it up to distribute.
          retention-days: 1

      # Find the PR associated with this push, if there is one.
      - uses: jwalton/gh-find-current-pr@v1
        id: findPr
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Inform beta builder
        run: |
          BRANCH=${GITHUB_REF:11}
          curl -L "https://betadownload.jetpack.me/gh-action.php?run_id=$GITHUB_RUN_ID&branch=$BRANCH&pr=${{ steps.findPr.outputs.pr }}&repo=$GITHUB_REPOSITORY&commit=$GITHUB_SHA&version=${{ steps.version.outputs.version }}"

  update_mirrors:
    name: Push to mirror repos
    runs-on: ubuntu-latest
    needs: build

    # Mirror master and any branch matching "*/branch-*". But note the latter is special cased
    # in .github/files/push-all-projects.sh.
    # Keep this in sync with the corresponding condition in cancel-dups.yml.
    if: github.ref == 'refs/heads/master' || contains( github.ref, '/branch-' )

    # Not setting a job-level timeout because it would be kind of pointless with the blocking step. Set a step timeout for all other steps instead.
    steps:
      - uses: actions/checkout@v2
        with:
          path: monorepo
        timeout-minutes: 1  # 2021-01-18: Successful runs seem to take a few seconds

      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: jetpack-build
        timeout-minutes: 1  # 2021-01-18: Successful runs seem to take a few seconds
      - name: Extract build archive
        run: tar --xz -xvvf build.tar.xz
        timeout-minutes: 1  # 2021-01-18: Successful runs seem to take a few seconds

      - name: Filter mirror list for release branch
        if: contains( github.ref, '/branch-' )
        working-directory: monorepo
        env:
          BUILD_BASE: ${{ github.workspace }}/build
        run: .github/files/filter-mirrors-for-release-branch.sh
        timeout-minutes: 1  # 2021-01-29: Guessing a successful run should only take a few seconds

      - name: Wait for prior instances of the workflow to finish
        uses: softprops/turnstyle@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push changed projects
        uses: ./monorepo/projects/github-actions/push-to-mirrors
        with:
          source-directory: ${{ github.workspace }}/monorepo
          token: ${{ secrets.API_TOKEN_GITHUB }}
          username: matticbot
          working-directory: ${{ github.workspace }}/build
        timeout-minutes: 5  # 2021-01-18: Successful runs seem to take about half a minute.
