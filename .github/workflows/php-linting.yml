name: PHP linting

on: pull_request

jobs:
  changed_files:
    name: detect changed files
    runs-on: ubuntu-latest
    outputs:
      php: ${{ steps.filter.outputs.php }}
      misc: ${{ steps.filter.outputs.misc }}
      php_excluded_files: ${{ steps.filter2.outputs.php_excluded_files }}

    steps:
      - uses: actions/checkout@v2

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          list-files: json
          filters: |
            php:
              # If any PHP file changed, they need checking.
              - added|modified:
                - '**.php'
            misc:
              # If composer or phpcs config changed, there may be a new standard.
              - 'composer.json'
              - 'composer.lock'
              - '.phpcs.config.xml'
              - '.phpcs.xml.dist'
              # If the excludelist changed, run to ensure newly non-excluded files pass.
              - 'tools/phpcs-excludelist.json'
              # If other files used by this workflow changed, run it to test those changes.
              - 'tools/parallel-lint.sh'
              - '.github/files/php-linting-phpcs.xml'
              - '.github/matchers/phpcs-problem-matcher.json'
              - '.github/matchers/php-lint-problem-matcher.json'
              - '.github/workflows/php-linting.yml'

      - id: filter2
        shell: bash
        env:
          PHP_FILES: ${{ steps.filter.outputs.php_files }}
        run: |
          EXCLUDED_FILES=$(jq --argjson files "$PHP_FILES" --slurpfile excludes tools/phpcs-excludelist.json -nc '$files - ($files - $excludes[0])')
          echo "::set-output name=php_excluded_files::$EXCLUDED_FILES"

      # When the `lint` job is skipped, it gets skipped incorrectly. So manually supply the statuses for the required jobs.
      - name: Hack around Github bug when skipping required matrixed jobs
        if: steps.filter.outputs.php != 'true' && steps.filter.outputs.misc != 'true'
        shell: bash
        run: |
          for v in '5.6' '7.0' '7.4' '8.0'; do
            curl -v \
              --url "${GITHUB_API_URL}/repos/${{ github.repository }}/statuses/${{ github.event.pull_request.head.sha }}" \
              --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
              --header 'content-type: application/json' \
              --data '{
                "state": "success",
                "target_url": "https://github.com/${{ github.repository }}/pull/${{ github.event.pull_request.number }}/checks?check_run_id=${{ github.run_id }}",
                "description": "Test skipped, no changed files",
                "context": '"\"PHP lint ($v)\""'
              }'
          done


  lint:
    name: PHP lint (${{ matrix.php-versions }})
    runs-on: ubuntu-latest
    needs: changed_files
    if: needs.changed_files.outputs.php == 'true' || needs.changed_files.outputs.misc == 'true'
    continue-on-error: ${{ matrix.experimental }}

    strategy:
      fail-fast: false
      matrix:
        # Note, if you add versions here then add them to the hack above too.
        php-versions: [ '5.6', '7.0', '7.4' ]
        experimental: [ false ]

        include:
          - php-versions: '8.0'
            experimental: true

    steps:
      - uses: actions/checkout@v2

      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          tools: composer
          coverage: none

      - name: Get Composer cache directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Tool versions
        run: |
          php --version
          composer --version

      - name: Install dependencies
        run: |
          # Install stuff ignoring platform reqs.
          composer install --ignore-platform-reqs
          # Remove stuff we don't need here that fails some platform reqs.
          # This will complain if we missed any.
          composer remove --dev sirbrillig/phpcs-changed automattic/jetpack-codesniffer

      - name: Run linter
        run: |
          echo "::add-matcher::.github/matchers/php-lint-problem-matcher.json"
          composer php:lint -- --checkstyle
          echo "::remove-matcher owner=php-lint"

  phpcs:
    name: PHP Code Sniffer (non-excluded files only)
    runs-on: ubuntu-latest
    needs: changed_files
    if: needs.changed_files.outputs.php == 'true' || needs.changed_files.outputs.misc == 'true'

    steps:
      - uses: actions/checkout@v2

      - uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          tools: composer
          coverage: none

      - name: Get Composer cache directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Tool versions
        run: |
          php --version
          composer --version

      - name: Install dependencies
        run: composer install

      - name: Run phpcs
        run: |
          echo "::add-matcher::.github/matchers/phpcs-problem-matcher.json"
          composer phpcs:lint:required -- --report=emacs --standard=.github/files/php-linting-phpcs.xml
          echo "::remove-matcher owner=phpcs"

  phpcompatibility:
    name: PHP Compatibility
    runs-on: ubuntu-latest
    needs: changed_files
    if: needs.changed_files.outputs.php == 'true' || needs.changed_files.outputs.misc == 'true'

    steps:
      - uses: actions/checkout@v2

      - uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          tools: composer
          coverage: none

      - name: Get Composer cache directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Tool versions
        run: |
          php --version
          composer --version

      - name: Install dependencies
        run: composer install

      - name: Run phpcs for PHPCompatibility
        run: |
          echo "::add-matcher::.github/matchers/phpcs-problem-matcher.json"
          composer phpcs:compatibility -- --report=emacs .
          echo "::remove-matcher owner=phpcs"

  phpcs_changed:
    name: PHP Code Sniffer (changes to excluded files only)
    runs-on: ubuntu-latest
    needs: changed_files
    if: needs.changed_files.outputs.php_excluded_files != '[]'
    continue-on-error: true

    steps:
      # We don't need full git history, but phpcs-changed does need everything up to the merge-base.
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 10
      - uses: ./.github/actions/deepen-to-merge-base

      - uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          tools: composer
          coverage: none

      - name: Get Composer cache directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Tool versions
        run: |
          php --version
          composer --version
          jq --version

      - name: Install dependencies
        run: composer install

      - name: Run phpcs-changed
        shell: bash
        run: |
          echo "::add-matcher::.github/matchers/phpcs-problem-matcher.json"
          composer phpcs:changed -- --report=json --standard=.github/files/php-linting-phpcs.xml --git-branch=${{ github.event.pull_request.base.sha }} $(
          jq -r '.[]' <<'EOF'
          ${{ needs.changed_files.outputs.php_excluded_files }}
          EOF
          ) | jq -r '.files | to_entries | .[] | .key as $key | .value.messages[] | [ $key, ":", .line, ":", .column, ": ", .type, " - ", .message, " (", .source, ")" ] | map(tostring) | join("")'
          echo "::remove-matcher owner=phpcs"
