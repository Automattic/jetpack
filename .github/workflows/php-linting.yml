name: PHP linting

on:
  pull_request:
    paths:
      # If any PHP file changed, they need checking.
      - '**.php'
      # If composer or phpcs config changed, there may be a new standard.
      - 'composer.json'
      - 'composer.lock'
      - '.phpcs.xml.dist'
      # If the excludelist changed, run to ensure newly non-excluded files pass.
      - 'bin/phpcs-excludelist.txt'
      # If other files used by this workflow changed, run it to test those changes.
      - 'bin/parallel-lint.sh'
      - '.github/files/php-linting-phpcs.xml'
      - '.github/matchers/phpcs-problem-matcher.json'
      - '.github/matchers/php-lint-problem-matcher.json'
      - '.github/workflows/php-linting.yml'

jobs:
  lint:
    name: PHP lint (${{ matrix.php-versions }})
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental }}

    strategy:
      fail-fast: false
      matrix:
        php-versions: [ '5.6', '7.0', '7.4' ]
        experimental: [ false ]

        include:
          - php-versions: '8.0'
            experimental: true

    steps:
      - uses: actions/checkout@v2

      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: intl, json, mbstring, xml

      - name: Get Composer cache directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Tool versions
        run: |
          php --version
          composer --version

      - name: Install dependencies
        run: |
          # Install stuff ignoring platform reqs.
          composer install --ignore-platform-reqs
          # Remove stuff we don't need here that fails some platform reqs.
          # This will complain if we missed any.
          composer remove --dev sirbrillig/phpcs-changed automattic/jetpack-codesniffer

      - name: Run linter
        run: |
          echo "::add-matcher::.github/matchers/php-lint-problem-matcher.json"
          composer php:lint -- --checkstyle
          echo "::remove-matcher owner=php-lint"

  phpcs:
    name: PHP Code Sniffer (non-excluded files only)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Get Composer cache directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Tool versions
        run: |
          php --version
          composer --version

      - name: Install dependencies
        run: composer install

      - name: Run phpcs
        run: |
          echo "::add-matcher::.github/matchers/phpcs-problem-matcher.json"
          composer phpcs:lint:required -- --report=emacs --standard=.github/files/php-linting-phpcs.xml
          echo "::remove-matcher owner=phpcs"

  phpcompatibility:
    name: PHP Compatibility
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Get Composer cache directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Tool versions
        run: |
          php --version
          composer --version

      - name: Install dependencies
        run: composer install

      - name: Run phpcs for PHPCompatibility
        run: |
          echo "::add-matcher::.github/matchers/phpcs-problem-matcher.json"
          composer phpcs:compatibility -- --report=emacs .
          echo "::remove-matcher owner=phpcs"
