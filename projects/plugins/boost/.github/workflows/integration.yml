name: Integration

on: [push]

jobs:

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest

    env:
      WORDPRESS_HOME: http://localhost:8000

    steps:
    - uses: actions/checkout@v2

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '7.4'
        tools: pecl

    - name: Setup GitHub SSH for checking out private repos.
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.JETPACK_BOOST_CRITICAL_CSS_GEN_KEY }}

    - name: Cache composer deps
      uses: actions/cache@v2
      env:
        cache-name: cache-composer-deps
      with:
        # composer cache files are stored in `~/.composer/cache/files/vendor/packagename` on Linux/macOS
        path: ~/.composer/cache
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: |
          ~/.npm
          node_modules
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Validate composer.json and composer.lock
      run: composer validate

    - name: Install PHP dependencies
      run: composer install --no-ansi --no-interaction --prefer-dist --no-progress

    - name: Install Node.js dependencies
      run: npm install

    - name: Build frontend assests
      run: npm run build

    - name: Log in to Github Packages docker repo
      uses: azure/docker-login@v1
      with:
        login-server: https://docker.pkg.github.com
        username: ${{ secrets.GH_PACKAGES_USERNAME }}
        password: ${{ secrets.GH_PACKAGES_PAT }}

    - name: Prepare docker containers
      run: npm run test:env-start

    - name: Check running containers
      run: docker ps -a

    - name: Show docker networking
      run: docker network ls

    - name: Sleep 5 seconds to allow DB to be available
      run: sleep 5

    - name: Run tests
      run: npm run test:integration:ci
