workflows:
  version: 2
  main:
    jobs:
      - php74-build
      - php80-build
      - php81-build
      - public-access
      - private-access

version: 2

job-references:
  mariadb_image: &mariadb_image
    cimg/mariadb:10.11

  setup_environment: &setup_environment
    name: "Setup Environment Variables"
    command: |
      echo "export PATH=$HOME/.composer/vendor/bin:$PATH" >> $BASH_ENV
      source /home/circleci/.bashrc

  install_dependencies: &install_dependencies
    name: "Install Dependencies"
    command: |
      sudo apt-get update && sudo apt-get install subversion mariadb-client rsync

  php_job: &php_job
    environment:
      - WP_TESTS_DIR: "/tmp/wordpress-tests-lib"
      - WP_CORE_DIR: "/tmp/wordpress/"
    steps:
      - checkout
      - run: *setup_environment
      - run: *install_dependencies
      - run:
          name: "Run Tests"
          command: |
            composer global require "phpunit/phpunit=^9.6" --ignore-platform-reqs --dev
            composer global require "yoast/phpunit-polyfills" --ignore-platform-reqs --dev
            rm -rf $WP_TESTS_DIR $WP_CORE_DIR
            bash bin/install-wp-tests.sh wordpress_test root '' 127.0.0.1 latest
            echo "Building wpcomsh"
            make build
            echo "php -l the build/"
            find build/ -name "*.php" | xargs -I X php -l X
            echo "Copying build to mu-plugins"
            mkdir -p ${WP_CORE_DIR}wp-content/mu-plugins/
            cp -r ./build/wpcomsh ${WP_CORE_DIR}wp-content/mu-plugins/
            echo "Linking the wpcomsh-loader.php file into mu-plugins";
            ln -s ${WP_CORE_DIR}wp-content/mu-plugins/wpcomsh/wpcomsh-loader.php ${WP_CORE_DIR}wp-content/mu-plugins/wpcomsh-loader.php
            mysql -uroot --protocol=tcp -e "ALTER USER 'root'@'%' IDENTIFIED WITH mysql_native_password AS '';"
            phpunit
            WP_MULTISITE=1 phpunit

jobs:
  php74-build:
    <<: *php_job
    docker:
      - image: cimg/php:7.4
      - image: *mariadb_image

  php80-build:
    <<: *php_job
    docker:
      - image: cimg/php:8.0
      - image: *mariadb_image

  php81-build:
    <<: *php_job
    docker:
      - image: cimg/php:8.1
      - image: *mariadb_image

  public-access:
    docker:
      - image: circleci/buildpack-deps:buster
    steps:
      - run: sudo su -c "apt-get update && apt-get -y upgrade && apt-get -y install composer rsync"
      - run: php -v
      - add_ssh_keys
      - checkout
      - setup_remote_docker
      - run: make test-public-access

  private-access:
    docker:
      - image: circleci/buildpack-deps:buster
    steps:
      - run: sudo su -c "apt-get update && apt-get -y upgrade && apt-get -y install composer rsync"
      - run: php -v
      - add_ssh_keys
      - checkout
      - setup_remote_docker
      - run: make test-private-access
