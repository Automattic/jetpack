/**
 * External dependencies
 */
import { useEffect, useState } from '@wordpress/element';
import debugFactory from 'debug';
/**
 * WordPress dependencies
 */
import getChapter from '../../lib/get-chapter';
import { VideoChapter } from '../../lib/get-chapter/types';
import { VideoGUID } from '../blocks/video/types';
/**
 * Internal dependencies
 */

const debug = debugFactory( 'jetpack:videopress:use-auto-generated-chapters' );

type UseAutoGeneratedChaptersArgs = {
	isPrivate: boolean;
	chapter?: VideoChapter;
	guid?: VideoGUID;
	token?: string;
};

const useAutoGeneratedChapter = ( {
	isPrivate,
	chapter,
	guid,
	token,
}: UseAutoGeneratedChaptersArgs ): boolean => {
	const [ isAutoGeneratedChapter, setIsAutoGeneratedChapter ] = useState( true );

	useEffect( () => {
		getChapter( { guid, token, isPrivate, chapter } )
			.then( text => {
				if ( text ) {
					const isAutoGeneratedChapterFile = /videopress-chapters-auto-generated/.test( text );

					if ( isAutoGeneratedChapterFile ) {
						debug( 'Chapter %o auto-generated detected', chapter.src );
					}

					setIsAutoGeneratedChapter( isAutoGeneratedChapterFile );
				}
			} )
			// eslint-disable-next-line no-console
			.catch( console.error );
	}, [ isPrivate, chapter, guid, token ] );

	return isAutoGeneratedChapter;
};

export default useAutoGeneratedChapter;
