name: PR is Up To Date
description: Check that Pull Requests are up to date with respect to a git tag.
branding:
  icon: 'check-square'
  color: 'green'
inputs:
  branch:
    description: Only check PRs being merged into this branch. Defaults to the repo's default branch.
    required: false
    default: ${{ github.event.repository.default_branch }}
  status:
    description: Status context for the status check. Default is "PR is up to date".
    required: false
  description-fail:
    description: Description field for the status check when the PR is out of date. Default is "This PR needs a $BRANCH merge or rebase."
    required: false
  description-ok:
    description: Description field for the status check when the PR is up to date. Default is empty.
    required: false
  tags:
    description: Whitespace-separated list of tags that the PR must be up to date with. Required when called on pull_request, but currently defaults to `input.tag` if that is set for back compat.
    required: false
  tag:
    description: Tag that PRs must be up to date with. Required when called on push.
    required: false
  paths:
    description: When called on push, only process PRs that touch a file matching one of these paths (one path per line). Any path format accepted by `git diff` may be used.
    required: false
  token:
    description: GitHub Access Token. The user associated with this token will show up as the "creator" of the status check.
    required: false
    default: ${{ github.token }}
runs:
  using: composite
  steps:
    - shell: bash
      env:
        API_TOKEN: ${{ inputs.token }}
        BRANCH: ${{ inputs.branch }}
        CONTEXT: ${{ inputs.status }}
        DESCRIPTION_FAIL: ${{ inputs.description-fail }}
        DESCRIPTION_OK: ${{ inputs.description-ok }}
        PATHS: ${{ inputs.paths }}
        TAG: ${{ inputs.tag }}
        TAGS: ${{ inputs.tags }}
      run: $GITHUB_ACTION_PATH/run.sh
