{"version":3,"sources":["custom-css/custom-css/js/use-codemirror.js"],"names":["$","Jetpack_CSS","modes","default","less","sass","init","this","$textarea","editor","window","CodeMirror","fromTextArea","get","mode","getMode","lineNumbers","tabSize","indentWithTabs","lineWrapping","setEditorHeight","addListeners","on","_","bind","debounce","val","getValue","change","setOption","height","getWrapperElement","offset","top","setSize","document","ready","jQuery"],"mappings":";;CAGA,SAAUA,GACT,GAAIC,IACHC,OACCC,QAAW,WACXC,KAAQ,cACRC,KAAQ,eAETC,KAAM,WACLC,KAAKC,UAAYR,EAAG,YACpBO,KAAKE,OAASC,OAAOC,WAAWC,aAAcL,KAAKC,UAAUK,IAAI,IAChEC,KAAMP,KAAKQ,UACXC,aAAa,EACbC,QAAS,EACTC,gBAAgB,EAChBC,cAAc,IAEfZ,KAAKa,mBAENC,aAAc,WAEbrB,EAAGU,QAASY,GAAI,SAAUC,EAAEC,KAAMD,EAAEE,SAAUlB,KAAKa,gBAAiB,KAAOb,OAE3EA,KAAKE,OAAOa,GAAI,SAAUC,EAAEC,KAAM,SAAUf,GAC3CF,KAAKC,UAAUkB,IAAKjB,EAAOkB,aACzBpB,OAEHP,EAAG,yBAA0B4B,OAAQL,EAAEC,KAAM,WAC5CjB,KAAKE,OAAOoB,UAAW,OAAQtB,KAAKQ,YAClCR,QAEJa,gBAAiB,WAChB,GAAIU,GAAS9B,EAAE,QAAQ8B,SAAW9B,EAAGO,KAAKE,OAAOsB,qBAAsBC,SAASC,GAChF1B,MAAKE,OAAOyB,QAAS,KAAMJ,IAE5Bf,QAAS,WACR,GAAID,GAAOd,EAAG,yBAA0B0B,KAIxC,OAHK,KAAOZ,GAAUP,KAAKL,MAAOY,KACjCA,EAAO,WAEDP,KAAKL,MAAOY,IAIrBd,GAAGmC,UAAWC,MAAOb,EAAEC,KAAMvB,EAAYK,KAAML,KAC7CoC","file":"../../../../custom-css/custom-css/js/use-codemirror.min.js","sourcesContent":["/* Do not modify this file directly. It is compiled from other files. */\n/* jshint onevar: false, smarttabs: true */\n\n(function($){\n\tvar Jetpack_CSS = {\n\t\tmodes: {\n\t\t\t'default': 'text/css',\n\t\t\t'less': 'text/x-less',\n\t\t\t'sass': 'text/x-scss'\n\t\t},\n\t\tinit: function() {\n\t\t\tthis.$textarea = $( '#safecss' );\n\t\t\tthis.editor = window.CodeMirror.fromTextArea( this.$textarea.get(0),{\n\t\t\t\tmode: this.getMode(),\n\t\t\t\tlineNumbers: true,\n\t\t\t\ttabSize: 2,\n\t\t\t\tindentWithTabs: true,\n\t\t\t\tlineWrapping: true\n\t\t\t});\n\t\t\tthis.setEditorHeight();\n\t\t},\n\t\taddListeners: function() {\n\t\t\t// nice sizing\n\t\t\t$( window ).on( 'resize', _.bind( _.debounce( this.setEditorHeight, 100 ), this ) );\n\t\t\t// keep textarea synced up\n\t\t\tthis.editor.on( 'change', _.bind( function( editor ){\n\t\t\t\tthis.$textarea.val( editor.getValue() );\n\t\t\t}, this ) );\n\t\t\t// change mode\n\t\t\t$( '#preprocessor_choices' ).change( _.bind( function(){\n\t\t\t\tthis.editor.setOption( 'mode', this.getMode() );\n\t\t\t}, this ) );\n\t\t},\n\t\tsetEditorHeight: function() {\n\t\t\tvar height = $('html').height() - $( this.editor.getWrapperElement() ).offset().top;\n\t\t\tthis.editor.setSize( null, height );\n\t\t},\n\t\tgetMode: function() {\n\t\t\tvar mode = $( '#preprocessor_choices' ).val();\n\t\t\tif ( '' === mode || ! this.modes[ mode ] ) {\n\t\t\t\tmode = 'default';\n\t\t\t}\n\t\t\treturn this.modes[ mode ];\n\t\t}\n\t};\n\n\t$( document ).ready( _.bind( Jetpack_CSS.init, Jetpack_CSS ) );\n})(jQuery);\n"]}