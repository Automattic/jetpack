{"version":3,"sources":["custom-css/custom-css/js/core-customizer-css-preview.js"],"names":["api","$","settingPreviewHandlers","custom_css","parent","console","warn","selectiveRefresh","partialConstructor","Partial","extend","refresh","deferred","setting","partial","this","preprocessor","get","jpCustomizerCssPreview","preprocessors","hasOwnProperty","prototype","call","Deferred","settings","theme","stylesheet","_","each","placements","placement","container","text","resolve","promise","wp","customize","jQuery"],"mappings":";;;CAGC,SAAUA,EAAKC,GACVD,EAAIE,uBAERF,EAAIE,uBAAuBC,WAAa,aAExCC,OAAOC,QAAQC,KAAM,mEAGtBN,EAAIO,iBAAiBC,mBAAmBL,WAAaH,EAAIO,iBAAiBE,QAAQC,QAOjFC,QAAS,WACR,GAECC,GAAUC,EAFPC,EAAUC,KACbC,EAAehB,EAAK,oCAAqCiB,KAK1D,OAAKC,wBAAuBC,cAAcC,eAAgBJ,GAClDhB,EAAIO,iBAAiBE,QAAQY,UAAUV,QAAQW,KAAMR,IAI7DF,EAAW,GAAIX,GAAEsB,SACjBV,EAAUb,EAAK,cAAgBA,EAAIwB,SAASC,MAAMC,WAAa,KAC/DC,EAAEC,KAAMd,EAAQe,aAAc,SAAUC,GACvCA,EAAUC,UAAUC,KAAMnB,EAAQI,SAGnCL,EAASqB,UACFrB,EAASsB,eAKhBC,GAAGC,UAAWC","file":"../../../../custom-css/custom-css/js/core-customizer-css-preview.min.js","sourcesContent":["/* Do not modify this file directly. It is compiled from other files. */\n// Originally based on https://raw.githubusercontent.com/xwp/wp-custom-scss-demo/master/custom-scss-demo-preview.js\n/* globals jpCustomizerCssPreview */\n(function( api, $ ) {\n\tif ( api.settingPreviewHandlers ) {\n\t\t// No-op the custom_css preview handler since now handled by partial.\n\t\tapi.settingPreviewHandlers.custom_css = function() {};\n\t} else {\n\t\tparent.console.warn( 'Missing core patch that adds support for settingPreviewHandlers' );\n\t}\n\n\tapi.selectiveRefresh.partialConstructor.custom_css = api.selectiveRefresh.Partial.extend( {\n\n\t\t/**\n\t\t * Refresh custom_css partial, using selective refresh if pre-processor and direct DOM manipulation if otherwise.\n\t\t *\n\t\t * @returns {jQuery.promise}\n\t\t */\n\t\trefresh: function() {\n\t\t\tvar partial = this,\n\t\t\t\tpreprocessor = api( 'jetpack_custom_css[preprocessor]' ).get(),\n\t\t\t\tdeferred, setting;\n\n\t\t\t// Sass or Less require Partial -- so ajax call to get it from PHP.\n\t\t\t// We can explicitly override for specific providers by testing if `'sass' === preprocessor`\n\t\t\tif ( jpCustomizerCssPreview.preprocessors.hasOwnProperty( preprocessor ) ) {\n\t\t\t\treturn api.selectiveRefresh.Partial.prototype.refresh.call( partial );\n\t\t\t}\n\n\t\t\t// No special providers, just write what we got.\n\t\t\tdeferred = new $.Deferred();\n\t\t\tsetting = api( 'custom_css[' + api.settings.theme.stylesheet + ']' );\n\t\t\t_.each( partial.placements(), function( placement ) {\n\t\t\t\tplacement.container.text( setting.get() );\n\t\t\t} );\n\n\t\t\tdeferred.resolve();\n\t\t\treturn deferred.promise();\n\t\t}\n\n\t} );\n\n}( wp.customize, jQuery ));\n"]}