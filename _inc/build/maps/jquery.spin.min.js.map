{"version":3,"sources":["jquery.spin.js"],"names":["factory","exports","require","define","amd","window","Spinner","Error","jQuery","$","fn","spin","opts","color","this","each","$this","data","spinner","stop","extend","css","presets","right","length","width","radius","pad","parseInt","left","outerWidth","tiny","lines","small","large","wp","trail","speed","medium"],"mappings":";;;;;CAoCC,SAASA,GAER,GAAsB,gBAAXC,SAETD,EAAQE,QAAQ,UAAWA,QAAQ,aAEhC,IAAqB,kBAAVC,SAAwBA,OAAOC,IAE7CD,QAAQ,SAAU,QAASH,OAExB,CAEH,IAAKK,OAAOC,QAAS,KAAM,IAAIC,OAAM,sBACrCP,GAAQK,OAAOG,OAAQH,OAAOC,WAGhC,SAASG,EAAGH,GAEZG,EAAEC,GAAGC,KAAO,SAASC,EAAMC,GAEzB,MAAOC,MAAKC,KAAK,WACf,GAAIC,GAAQP,EAAEK,MACZG,EAAOD,EAAMC,MAMf,IAJIA,EAAKC,UACPD,EAAKC,QAAQC,aACNF,GAAKC,UAED,IAATN,EAAgB,CAOlB,GANAA,EAAOH,EAAEW,QACLP,MAAOA,GAASG,EAAMK,IAAI,UAC5BZ,EAAEC,GAAGC,KAAKW,QAAQV,IAASA,OAIF,KAAfA,EAAKW,WAAgD,KAAhBX,EAAKY,YAC3B,KAAfZ,EAAKa,WAAgD,KAAhBb,EAAKc,OAAyB,CAC7E,GAAIC,GAAMX,EAAMK,IAAK,eACrBM,OAAuB,KAARA,EAAwB,EAAIC,SAAUD,EAAK,IAC1Df,EAAKiB,KAAOb,EAAMc,aAAiB,GAAMlB,EAAKY,OAASZ,EAAKa,MAAQb,EAAKc,QAAaC,EAAMf,EAAKW,YAC1FX,GAAKW,MAGdN,EAAKC,QAAU,GAAIZ,GAAQM,GAAMD,KAAKG,UAK5CL,EAAEC,GAAGC,KAAKW,SACRS,MAAQC,MAAO,EAAGR,OAAQ,EAAGC,MAAO,EAAGC,OAAQ,GAC/CO,OAASD,MAAO,EAAGR,OAAQ,EAAGC,MAAO,EAAGC,OAAQ,GAChDQ,OAASF,MAAO,GAAIR,OAAQ,EAAGC,MAAO,EAAGC,OAAQ,MAMrD,SAAUjB,GACTA,EAAEC,GAAGC,KAAKW,QAAQa,IAAOC,MAAO,GAAIC,MAAO,KAC3C5B,EAAEC,GAAGC,KAAKW,QAAQW,MAASxB,EAAEW,QAAUY,MAAQ,EAAGR,OAAQ,EAAGC,MAAO,EAAGC,OAAQ,GAAKjB,EAAEC,GAAGC,KAAKW,QAAQa,IACtG1B,EAAEC,GAAGC,KAAKW,QAAQgB,OAAS7B,EAAEW,QAAUY,MAAQ,EAAGR,OAAQ,EAAGC,MAAO,EAAGC,OAAQ,GAAKjB,EAAEC,GAAGC,KAAKW,QAAQa,IACtG1B,EAAEC,GAAGC,KAAKW,QAAQY,MAASzB,EAAEW,QAAUY,MAAO,GAAIR,OAAQ,EAAGC,MAAO,EAAGC,OAAQ,GAAKjB,EAAEC,GAAGC,KAAKW,QAAQa,IACtG1B,EAAEC,GAAGC,KAAKW,QAAQ,cAAkBb,EAAEW,QAAUS,KAAO,GAAKpB,EAAEC,GAAGC,KAAKW,QAAQW,OAC9ExB,EAAEC,GAAGC,KAAKW,QAAQ,eAAkBb,EAAEW,QAAUG,MAAO,GAAKd,EAAEC,GAAGC,KAAKW,QAAQW,OAC9ExB,EAAEC,GAAGC,KAAKW,QAAQ,eAAkBb,EAAEW,QAAUS,KAAO,GAAKpB,EAAEC,GAAGC,KAAKW,QAAQgB,QAC9E7B,EAAEC,GAAGC,KAAKW,QAAQ,gBAAkBb,EAAEW,QAAUG,MAAO,GAAKd,EAAEC,GAAGC,KAAKW,QAAQgB,QAC9E7B,EAAEC,GAAGC,KAAKW,QAAQ,cAAkBb,EAAEW,QAAUS,KAAO,GAAKpB,EAAEC,GAAGC,KAAKW,QAAQY,OAC9EzB,EAAEC,GAAGC,KAAKW,QAAQ,eAAkBb,EAAEW,QAAUG,MAAO,GAAKd,EAAEC,GAAGC,KAAKW,QAAQY,QAC5E1B","file":"../jquery.spin.min.js","sourcesContent":["/* Do not modify this file directly. It is compiled from other files. */\n/**\n * Copyright (c) 2011-2013 Felix Gnass\n * Licensed under the MIT license\n */\n\n/*\n\nBasic Usage:\n============\n\n$('#el').spin(); // Creates a default Spinner using the text color of #el.\n$('#el').spin({ ... }); // Creates a Spinner using the provided options.\n\n$('#el').spin(false); // Stops and removes the spinner.\n\nUsing Presets:\n==============\n\n$('#el').spin('small'); // Creates a 'small' Spinner using the text color of #el.\n$('#el').spin('large', '#fff'); // Creates a 'large' white Spinner.\n\nAdding a custom preset:\n=======================\n\n$.fn.spin.presets.flower = {\n  lines: 9\n  length: 10\n  width: 20\n  radius: 0\n}\n\n$('#el').spin('flower', 'red');\n\n*/\n\n(function(factory) {\n\n  if (typeof exports == 'object') {\n    // CommonJS\n    factory(require('jquery'), require('spin'))\n  }\n  else if (typeof define == 'function' && define.amd) {\n    // AMD, register as anonymous module\n    define(['jquery', 'spin'], factory)\n  }\n  else {\n    // Browser globals\n    if (!window.Spinner) throw new Error('Spin.js not present')\n    factory(window.jQuery, window.Spinner)\n  }\n\n}(function($, Spinner) {\n\n  $.fn.spin = function(opts, color) {\n\n    return this.each(function() {\n      var $this = $(this),\n        data = $this.data();\n\n      if (data.spinner) {\n        data.spinner.stop();\n        delete data.spinner;\n      }\n      if (opts !== false) {\n        opts = $.extend(\n          { color: color || $this.css('color') },\n          $.fn.spin.presets[opts] || opts\n        )\n        // Begin WordPress Additions\n        // To use opts.right, you need to have specified a length, width, and radius.\n        if ( typeof opts.right !== 'undefined' && typeof opts.length !== 'undefined'\n          && typeof opts.width !== 'undefined' && typeof opts.radius !== 'undefined' ) {\n          var pad = $this.css( 'padding-left' );\n          pad = ( typeof pad === 'undefined' ) ? 0 : parseInt( pad, 10 );\n          opts.left = $this.outerWidth() - ( 2 * ( opts.length + opts.width + opts.radius ) ) - pad - opts.right;\n          delete opts.right;\n        }\n        // End WordPress Additions\n        data.spinner = new Spinner(opts).spin(this)\n      }\n    })\n  }\n\n  $.fn.spin.presets = {\n    tiny: { lines: 8, length: 2, width: 2, radius: 3 },\n    small: { lines: 8, length: 4, width: 3, radius: 5 },\n    large: { lines: 10, length: 8, width: 4, radius: 8 }\n  }\n\n}));\n\n// Jetpack Presets Overrides:\n(function($){\n\t$.fn.spin.presets.wp = { trail: 60, speed: 1.3 };\n\t$.fn.spin.presets.small  = $.extend( { lines:  8, length: 2, width: 2, radius: 3 }, $.fn.spin.presets.wp );\n\t$.fn.spin.presets.medium = $.extend( { lines:  8, length: 4, width: 3, radius: 5 }, $.fn.spin.presets.wp );\n\t$.fn.spin.presets.large  = $.extend( { lines: 10, length: 6, width: 4, radius: 7 }, $.fn.spin.presets.wp );\n\t$.fn.spin.presets['small-left']   = $.extend( { left:  5 }, $.fn.spin.presets.small );\n\t$.fn.spin.presets['small-right']  = $.extend( { right: 5 }, $.fn.spin.presets.small );\n\t$.fn.spin.presets['medium-left']  = $.extend( { left:  5 }, $.fn.spin.presets.medium );\n\t$.fn.spin.presets['medium-right'] = $.extend( { right: 5 }, $.fn.spin.presets.medium );\n\t$.fn.spin.presets['large-left']   = $.extend( { left:  5 }, $.fn.spin.presets.large );\n\t$.fn.spin.presets['large-right']  = $.extend( { right: 5 }, $.fn.spin.presets.large );\n})(jQuery);\n"]}