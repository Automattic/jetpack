{"version":3,"sources":["custom-post-types/comics/comics.js"],"names":["jQuery","$","Jetpack_Comics","init","document","on","this","onDragOver","onDragLeave","onDrop","append","find","text","Jetpack_Comics_Options","labels","dragging","end","uploading","prepend","window","unsupported","off","filterImageFiles","files","validFiles","i","_len","length","type","match","push","dragTimeout","event","preventDefault","clearTimeout","addClass","setTimeout","removeClass","stopPropagation","originalEvent","dataTransfer","alert","invalidUpload","formData","FormData","fl","spin","ajax","url","writeURL","nonce","data","processData","contentType","dataType","xhrFields","withCredentials","done","processing","location","href","error","fail"],"mappings":";;;AAIAA,OAAQ,SAAWC,GAIlB,GAAIC,IACHC,KAAO,WACNF,EAAGG,UAAWC,GAAI,0BAA2B,iCAAkCC,KAAKC,YACpFN,EAAGG,UAAWC,GAAI,2BAA4B,iCAAkCC,KAAKE,aACrFP,EAAGG,UAAWC,GAAI,sBAAuB,iCAAkCC,KAAKG,QAEhFR,EAAG,QAASS,OAAQT,EAAG,0FACvBA,EAAG,4BACDU,KAAM,aACLC,KAAMC,uBAAuBC,OAAOC,UACrCC,MACAL,KAAM,cACLC,KAAMC,uBAAuBC,OAAOG,WACpCC,QAASjB,EAAG,4BAEN,cAAgBkB,SAAU,QAAUA,UAC5ClB,EAAG,sCAAuCW,KAAMC,uBAAuBC,OAAOM,aAC9EnB,EAAGG,UAAWiB,IAAK,uBAAwBhB,GAAI,sBAAuB,iCAAkCC,KAAKE,eAO/Gc,iBAAmB,SAAWC,GAG7B,IAAM,GAFFC,MAEMC,EAAI,EAAGC,EAAOH,EAAMI,OAAQF,EAAIC,EAAMD,IAC1CF,EAAME,GAAGG,KAAKC,MAAO,cACzBL,EAAWM,KAAMP,EAAME,GAIzB,OAAOD,IAGRO,YAAc,KAEdxB,WAAY,SAAWyB,GACtBA,EAAMC,iBAENC,aAAchC,EAAe6B,aAE7B9B,EAAG,QAASkC,SAAU,aAGvB3B,YAAa,WACZ0B,aAAchC,EAAe6B,aAI7B7B,EAAe6B,YAAcK,WAAY,WACxCnC,EAAG,QAASoC,YAAa,aACvB,MAGJ5B,OAAQ,SAAWuB,GAClBA,EAAMC,iBACND,EAAMM,kBAGNN,EAAMO,cAAcD,kBACpBN,EAAMO,cAAcN,gBAEpB,IAAIV,GAAQrB,EAAeoB,iBAAkBU,EAAMO,cAAcC,aAAajB,MAI9E,IAFAtB,EAAG,QAASoC,YAAa,YAEH,IAAjBd,EAAMI,OAEV,WADAc,OAAO5B,uBAAuBC,OAAO4B,cAItCzC,GAAG,QAASkC,SAAU,YAItB,KAAM,GAFFQ,GAAW,GAAIC,UAETnB,EAAI,EAAGoB,EAAKtB,EAAMI,OAAQF,EAAIoB,EAAIpB,IAC3CkB,EAASjC,OAAQ,SAAWe,EAAGF,EAAOE,GAGvCxB,GAAG,gDAAiD6C,OAEpD7C,EAAE8C,MACDC,IAAKnC,uBAAuBoC,SAAW,UAAYpC,uBAAuBqC,MAC1EC,KAAMR,EACNS,aAAa,EACbC,aAAa,EACbzB,KAAM,OACN0B,SAAU,OACVC,WACCC,iBAAiB,KAGlBC,KAAM,SAAUN,GAChBlD,EAAG,uCAAwCW,KAAMC,uBAAuBC,OAAO4C,YAE1E,OAASP,GACb/C,SAASuD,SAASC,KAAOT,EAAKH,IAErB,SAAWG,KACpBV,MAAOU,EAAKU,OAEZ5D,EAAG,QAASoC,YAAa,gBAG1ByB,KAAM,WACNrB,MAAO5B,uBAAuBC,OAAO+C,UAKxC3D,GAAeC","file":"../../../custom-post-types/comics/comics.min.js","sourcesContent":["/* Do not modify this file directly. It is compiled from other files. */\n/* jshint onevar: false, smarttabs: true, devel: true */\n/* global Jetpack_Comics_Options */\n\njQuery( function ( $ ) {\n\t/**\n\t * Enable front-end uploading of images for Comics users.\n\t */\n\tvar Jetpack_Comics = {\n\t\tinit : function () {\n\t\t\t$( document ).on( 'dragover.jetpack-comics', 'body, #jetpack-comic-drop-zone', this.onDragOver );\n\t\t\t$( document ).on( 'dragleave.jetpack-comics', 'body, #jetpack-comic-drop-zone', this.onDragLeave );\n\t\t\t$( document ).on( 'drop.jetpack-comics', 'body, #jetpack-comic-drop-zone', this.onDrop );\n\n\t\t\t$( 'body' ).append( $( '<div id=\"jetpack-comic-drop-zone\"><p class=\"dragging\" /><p class=\"uploading\" /></div>' ) );\n\t\t\t$( '#jetpack-comic-drop-zone' )\n\t\t\t\t.find( '.dragging' )\n\t\t\t\t\t.text( Jetpack_Comics_Options.labels.dragging )\n\t\t\t\t.end()\n\t\t\t\t.find( '.uploading' )\n\t\t\t\t\t.text( Jetpack_Comics_Options.labels.uploading )\n\t\t\t\t\t.prepend( $( '<span class=\"spinner\"/>' ) );\n\n\t\t\tif ( ! ( 'FileReader' in window && 'File' in window ) ) {\n\t\t\t\t$( '#jetpack-comic-drop-zone .dragging' ).text( Jetpack_Comics_Options.labels.unsupported );\n\t\t\t\t$( document ).off( 'drop.jetpack-comics' ).on( 'drop.jetpack-comics', 'body, #jetpack-comic-drop-zone', this.onDragLeave );\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Only upload image files.\n\t\t */\n\t\tfilterImageFiles : function ( files ) {\n\t\t\tvar validFiles = [];\n\n\t\t\tfor ( var i = 0, _len = files.length; i < _len; i++ ) {\n\t\t\t\tif ( files[i].type.match( /^image\\//i ) ) {\n\t\t\t\t\tvalidFiles.push( files[i] );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn validFiles;\n\t\t},\n\n\t\tdragTimeout : null,\n\n\t\tonDragOver: function ( event ) {\n\t\t\tevent.preventDefault();\n\n\t\t\tclearTimeout( Jetpack_Comics.dragTimeout );\n\n\t\t\t$( 'body' ).addClass( 'dragging' );\n\t\t},\n\n\t\tonDragLeave: function ( /*event*/ ) {\n\t\t\tclearTimeout( Jetpack_Comics.dragTimeout );\n\n\t\t\t// In Chrome, the screen flickers because we're moving the drop zone in front of 'body'\n\t\t\t// so the dragover/dragleave events happen frequently.\n\t\t\tJetpack_Comics.dragTimeout = setTimeout( function () {\n\t\t\t\t$( 'body' ).removeClass( 'dragging' );\n\t\t\t}, 100 );\n\t\t},\n\n\t\tonDrop: function ( event ) {\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\n\t\t\t// recent chrome bug requires this, see stackoverflow thread: http://bit.ly/13BU7b5\n\t\t\tevent.originalEvent.stopPropagation();\n\t\t\tevent.originalEvent.preventDefault();\n\n\t\t\tvar files = Jetpack_Comics.filterImageFiles( event.originalEvent.dataTransfer.files );\n\n\t\t\t$( 'body' ).removeClass( 'dragging' );\n\n\t\t\tif ( files.length === 0 ) {\n\t\t\t\talert( Jetpack_Comics_Options.labels.invalidUpload );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t$( 'body' ).addClass( 'uploading' );\n\n\t\t\tvar formData = new FormData();\n\n\t\t\tfor ( var i = 0, fl = files.length; i < fl; i++ ) {\n\t\t\t\tformData.append( 'image_' + i, files[ i ] ); // won't work as image[]\n\t\t\t}\n\n\t\t\t$( '#jetpack-comic-drop-zone .uploading .spinner' ).spin();\n\n\t\t\t$.ajax( {\n\t\t\t\turl: Jetpack_Comics_Options.writeURL + '&nonce=' + Jetpack_Comics_Options.nonce,\n\t\t\t\tdata: formData,\n\t\t\t\tprocessData: false,\n\t\t\t\tcontentType: false,\n\t\t\t\ttype: 'POST',\n\t\t\t\tdataType: 'json',\n\t\t\t\txhrFields: {\n\t\t\t\t\twithCredentials: true\n\t\t\t\t}\n\t\t\t} )\n\t\t\t.done( function( data ) {\n\t\t\t\t$( '#jetpack-comic-drop-zone .uploading' ).text( Jetpack_Comics_Options.labels.processing );\n\n\t\t\t\tif ( 'url' in data ) {\n\t\t\t\t\tdocument.location.href = data.url;\n\t\t\t\t}\n\t\t\t\telse if ( 'error' in data ) {\n\t\t\t\t\talert( data.error );\n\n\t\t\t\t\t$( 'body' ).removeClass( 'uploading' );\n\t\t\t\t}\n\t\t\t} )\n\t\t\t.fail( function ( /*req*/ ) {\n\t\t\t\talert( Jetpack_Comics_Options.labels.error );\n\t\t\t} );\n\t\t}\n\t};\n\n\tJetpack_Comics.init();\n} );\n"]}