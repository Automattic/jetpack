{"version":3,"sources":["widgets/gallery/js/admin.js"],"names":["$","setupStyleOptions","each","style","this","val","form","parents","find","hide","show","setupThumbs","selection","wrapper","empty","imageSize","_wpGalleryWidgetAdminSettings","thumbSize","model","sizedUrl","get","thumb","jQuery","src","alt","title","width","height","class","append","getAttachments","idsString","shortcode","wp","next","media","gallery","attachments","getSelection","Selection","models","props","toJSON","multiple","more","done","set","query","unmirror","unset","getWorkflow","options","workflow","view","MediaFrame","GalleryWidget","on","state","ids","map","id_string","join","$ids","trigger","$thumbs","setState","document","body","event","preventDefault","widget_form","closest","editing","l10n","addMedia","open","_wpMediaViewsL10n","Post","extend","createStates","controller","states","add","CollectionEdit","type","collectionType","editGalleryTitle","SettingsView","Settings","Gallery","library","menu","CollectionAdd","addToGalleryTitle","WidgetGalleryEdit","GalleryEdit","gallerySettings","GalleryAdd"],"mappings":"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","file":"../../../../widgets/gallery/js/admin.min.js","sourcesContent":["/* Do not modify this file directly. It is compiled from other files. */\n/* jshint onevar: false, multistr: true */\n/* global _wpMediaViewsL10n, _wpGalleryWidgetAdminSettings */\n\n(function($){\n\tvar $ids;\n\tvar $thumbs;\n\n\t$(function(){\n\t\t$( document.body ) .on( 'click', '.gallery-widget-choose-images', function( event ) {\n\t\t\tevent.preventDefault();\n\n\t\t\tvar widget_form = $( this ).closest( 'form, .form' );\n\n\t\t\t$ids    = widget_form.find( '.gallery-widget-ids' );\n\t\t\t$thumbs\t= widget_form.find( '.gallery-widget-thumbs' );\n\n\t\t\tvar idsString = $ids.val();\n\n\t\t\tvar attachments = getAttachments( idsString );\n\n\t\t\tvar selection   = null;\n\t\t\tvar editing     = false;\n\n\t\t\tif ( attachments ) {\n\t\t\t\tselection = getSelection( attachments );\n\n\t\t\t\tediting = true;\n\t\t\t}\n\n\t\t\tvar options = {\n\t\t\t\tstate: 'gallery-edit',\n\t\t\t\ttitle: wp.media.view.l10n.addMedia,\n\t\t\t\tmultiple: true,\n\t\t\t\tediting: editing,\n\t\t\t\tselection: selection\n\t\t\t};\n\n\t\t\tvar workflow = getWorkflow( options );\n\n\t\t\tworkflow.open();\n\t\t});\n\n\t\t// Setup an onchange handler to toggle various options when changing style. The different style options\n\t\t// require different form inputs to be presented in the widget; this event will keep the UI in sync\n\t\t// with the selected style\n\t\t$( '.widget-inside' ).on( 'change', '.gallery-widget-style', setupStyleOptions);\n\n\t\t// Setup the Link To options for all forms currently on the page. Does the same as the onChange handler, but\n\t\t// is called once to display the correct form inputs for each widget on the page\n\t\tsetupStyleOptions();\n\t});\n\n\tvar media       = wp.media,\n\t\tl10n;\n\n\t// Link any localized strings.\n\tl10n = media.view.l10n = typeof _wpMediaViewsL10n === 'undefined' ? {} : _wpMediaViewsL10n;\n\n\t/**\n\t * wp.media.view.MediaFrame.GalleryWidget\n\t *\n\t * This behavior can be very nearly had by setting the workflow's state to 'gallery-edit', but\n\t * we cannot use the custom WidgetGalleryEdit controller with it (must overide createStates(),\n\t * which is necessary to disable the sidebar gallery settings in the media browser)\n\t */\n\tmedia.view.MediaFrame.GalleryWidget = media.view.MediaFrame.Post.extend({\n\t\tcreateStates: function() {\n\t\t\tvar options = this.options;\n\n\t\t\t// `CollectionEdit` and `CollectionAdd` were only introduced in r27214-core,\n\t\t\t// so they may not be available yet.\n\t\t\tif ( 'CollectionEdit' in media.controller ) {\n\t\t\t\tthis.states.add([\n\t\t\t\t\tnew media.controller.CollectionEdit({\n\t\t\t\t\t\ttype:           'image',\n\t\t\t\t\t\tcollectionType: 'gallery',\n\t\t\t\t\t\ttitle:           l10n.editGalleryTitle,\n\t\t\t\t\t\tSettingsView:    media.view.Settings.Gallery,\n\t\t\t\t\t\tlibrary:         options.selection,\n\t\t\t\t\t\tediting:         options.editing,\n\t\t\t\t\t\tmenu:           'gallery'\n\t\t\t\t\t}),\n\t\t\t\t\tnew media.controller.CollectionAdd({\n\t\t\t\t\t\ttype:           'image',\n\t\t\t\t\t\tcollectionType: 'gallery',\n\t\t\t\t\t\ttitle:          l10n.addToGalleryTitle\n\t\t\t\t\t})\n\t\t\t\t]);\n\t\t\t} else {\n\t\t\t\t// If `CollectionEdit` is not available, then use the old approach.\n\n\t\t\t\tif ( ! ( 'WidgetGalleryEdit' in media.controller ) ) {\n\t\t\t\t\t// Remove the gallery settings sidebar when editing widgets.\n\t\t\t\t\tmedia.controller.WidgetGalleryEdit = media.controller.GalleryEdit.extend({\n\t\t\t\t\t\tgallerySettings: function( /*browser*/ ) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tthis.states.add([\n\t\t\t\t\tnew media.controller.WidgetGalleryEdit({\n\t\t\t\t\t\tlibrary: options.selection,\n\t\t\t\t\t\tediting: options.editing,\n\t\t\t\t\t\tmenu:    'gallery'\n\t\t\t\t\t}),\n\t\t\t\t\tnew media.controller.GalleryAdd({ })\n\t\t\t\t]);\n\t\t\t}\n\t\t}\n\t});\n\n\tfunction setupStyleOptions(){\n\t\t$( '.widget-inside .gallery-widget-style' ).each( function( /*i*/ ){\n\t\t\tvar style = $( this ).val();\n\n\t\t\tvar form = $( this ).parents( 'form' );\n\n\t\t\tswitch ( style ) {\n\t\t\t\tcase 'slideshow':\n\t\t\t\t\tform.find( '.gallery-widget-link-wrapper' ).hide();\n\t\t\t\t\tform.find( '.gallery-widget-columns-wrapper' ).hide();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tform.find( '.gallery-widget-link-wrapper' ).show();\n\t\t\t\t\tform.find( '.gallery-widget-columns-wrapper' ).show();\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Take a given Selection of attachments and a thumbs wrapper div (jQuery object)\n\t * and fill it with thumbnails\n\t */\n\tfunction setupThumbs( selection, wrapper ){\n\t\twrapper.empty();\n\n\t\tvar imageSize = _wpGalleryWidgetAdminSettings.thumbSize;\n\n\t\tselection.each( function( model ){\n\t\t\tvar sizedUrl = model.get('url') + '?w=' + imageSize + '&h=' + imageSize + '&crop=true';\n\n\t\t\tvar thumb = jQuery('<img>', { 'src' : sizedUrl, 'alt': model.get('title'), 'title': model.get('title'), 'width': imageSize, 'height': imageSize, 'class': 'thumb' });\n\n\t\t\twrapper.append( thumb );\n\t\t});\n\t}\n\n\t/**\n\t * Take a csv string of ids (as stored in db) and fetch a full Attachments collection\n\t */\n\tfunction getAttachments( idsString ) {\n\t\tif ( ! idsString ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Found in /wp-includes/js/media-editor.js\n\t\tvar shortcode = wp.shortcode.next( 'gallery', '[gallery ids=\"' + idsString + '\"]' );\n\n\t\t// Ignore the rest of the match object, to give attachments() below what it expects\n\t\tshortcode     = shortcode.shortcode;\n\n\t\tvar attachments = wp.media.gallery.attachments( shortcode );\n\n\t\treturn attachments;\n\t}\n\n\t/**\n\t * Take an Attachments collection and return a corresponding Selection model that can be\n\t * passed to a MediaFrame to prepopulate the gallery picker\n\t */\n\tfunction getSelection( attachments ) {\n\t\tvar selection = new wp.media.model.Selection( attachments.models, {\n\t\t\tprops:    attachments.props.toJSON(),\n\t\t\tmultiple: true\n\t\t});\n\n\t\tselection.gallery = attachments.gallery;\n\n\t\t// Fetch the query's attachments, and then break ties from the\n\t\t// query to allow for sorting.\n\t\tselection.more().done( function() {\n\t\t\t// Break ties with the query.\n\t\t\tselection.props.set( { query: false } );\n\t\t\tselection.unmirror();\n\t\t\tselection.props.unset( 'orderby' );\n\t\t});\n\n\t\treturn selection;\n\t}\n\n\t/**\n\t * Create a media 'workflow' (MediaFrame). This is the main entry point for the media picker\n\t */\n\tfunction getWorkflow( options ) {\n\t\tvar workflow = new wp.media.view.MediaFrame.GalleryWidget( options );\n\n\t\tworkflow.on( 'update', function( selection ) {\n\t\t\tvar state = workflow.state();\n\n\t\t\tselection = selection || state.get( 'selection' );\n\n\t\t\tif ( ! selection ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Map the Models down into a simple array of ids that can be easily imploded to a csv string\n\t\t\tvar ids = selection.map( function( model ){\n\t\t\t\treturn model.get( 'id' );\n\t\t\t} );\n\n\t\t\tvar id_string = ids.join( ',' );\n\n\t\t\t$ids.val( id_string ).trigger( 'change' );\n\n\t\t\tsetupThumbs( selection, $thumbs );\n\t\t}, this );\n\n\t\tworkflow.setState( workflow.options.state );\n\n\t\treturn workflow;\n\t}\n})(jQuery);\n"]}