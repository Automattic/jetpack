{"version":3,"sources":["after-the-deadline/tinymce/plugin.js"],"names":["tinymce","PluginManager","add","editor","initAtDCore","atdCore","window","AtDCore","map","each","_isTinyMCE","getAttrib","node","key","dom","findSpans","parent","undefined","select","hasClass","className","contents","childNodes","replaceWith","old_node","new_node","replace","create","node_html","class","data-mce-bogus","removeParent","remove","setIgnoreStrings","getParam","join","showTypes","getLang","defaultStr","AtD_l10n_r0ar","isMarkedNode","test","markMyWords","errors","getBody","checkIfFinished","length","suggestionsMenu","hideMenu","finish","ignoreWord","target","word","all","innerText","textContent","regex","RegExp","nodes","i","setContent","getContent","format","started","nodeChanged","fire","sendRequest","file","data","success","id","url","alert","setProgressState","util","XHR","send","content_type","type","encodeURI","error","req","o","status","storeIgnoredStrings","setAlwaysIgnore","text","encodeURIComponent","showSuggestions","pos","root","targetPos","items","errorDescription","findSuggestion","push","description","classes","disabled","suggestions","suggestion","onclick","applySuggestion","moreinfo","windowManager","open","title","width","height","inline","apply","ui","Menu","context","onautohide","event","preventDefault","onhide","renderTo","document","body","DOM","getPos","getContentAreaContainer","getRoot","nodeName","x","ownerDocument","documentElement","scrollLeft","y","scrollTop","moveTo","offsetHeight","on","addCommand","callback","results","errorCount","AtD_proofread_click_count","request","responseText","substr","responseXML","getElementsByTagName","item","firstChild","processXML","count","settings","content_css","addStyle","selection","addMenuItem","cmd","onPostRender","self","this","active","addButton","tooltip"],"mappings":"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","file":"../../../after-the-deadline/tinymce/plugin.min.js","sourcesContent":["/* Do not modify this file directly. It is compiled from other files. */\n/* global tinymce */\n/*\n * TinyMCE Writing Improvement Tool Plugin\n * Author: Raphael Mudge (raffi@automattic.com)\n *\n * Updated for TinyMCE 4.0\n *\n * http://www.afterthedeadline.com\n *\n * Distributed under the LGPL\n *\n * Derived from:\n *\t$Id: editor_plugin_src.js 425 2007-11-21 15:17:39Z spocke $\n *\n *\t@author Moxiecode\n *\t@copyright Copyright (C) 2004-2008, Moxiecode Systems AB, All rights reserved.\n *\n *\tMoxiecode Spell Checker plugin released under the LGPL with TinyMCE\n */\ntinymce.PluginManager.add( 'AtD', function( editor ) {\n\tvar suggestionsMenu, started, atdCore, dom,\n\t\teach = tinymce.each;\n\n\t/* initializes the functions used by the AtD Core UI Module */\n\tfunction initAtDCore() {\n\n\t\tatdCore = new window.AtDCore();\n\t\tatdCore.map = each;\n\t\tatdCore._isTinyMCE = true;\n\n\t\tatdCore.getAttrib = function( node, key ) {\n\t\t\treturn dom.getAttrib( node, key );\n\t\t};\n\n\t\tatdCore.findSpans = function( parent ) {\n\t\t\tif ( parent === undefined ) {\n\t\t\t\treturn dom.select('span');\n\t\t\t} else {\n\t\t\t\treturn dom.select( 'span', parent );\n\t\t\t}\n\t\t};\n\n\t\tatdCore.hasClass = function( node, className ) {\n\t\t\treturn dom.hasClass( node, className );\n\t\t};\n\n\t\tatdCore.contents = function( node ) {\n\t\t\treturn node.childNodes;\n\t\t};\n\n\t\tatdCore.replaceWith = function( old_node, new_node ) {\n\t\t\treturn dom.replace( new_node, old_node );\n\t\t};\n\n\t\tatdCore.create = function( node_html ) {\n\t\t\treturn dom.create( 'span', { 'class': 'mceItemHidden', 'data-mce-bogus': 1 }, node_html );\n\t\t};\n\n\t\tatdCore.removeParent = function( node ) {\n\t\t\tdom.remove( node, true );\n\t\t\treturn node;\n\t\t};\n\n\t\tatdCore.remove = function( node ) {\n\t\t\tdom.remove( node );\n\t\t};\n\n\t\tatdCore.setIgnoreStrings( editor.getParam( 'atd_ignore_strings', [] ).join(',') );\n\t\tatdCore.showTypes( editor.getParam( 'atd_show_types', '' ) );\n\t}\n\n\tfunction getLang( key, defaultStr ) {\n\t\treturn ( window.AtD_l10n_r0ar && window.AtD_l10n_r0ar[key] ) || defaultStr;\n\t}\n\n\tfunction isMarkedNode( node ) {\n\t\treturn ( node.className && /\\bhidden(GrammarError|SpellError|Suggestion)\\b/.test( node.className ) );\n\t}\n\n\tfunction markMyWords( errors ) {\n\t\treturn atdCore.markMyWords( atdCore.contents( editor.getBody() ), errors );\n\t}\n\n\t// If no more suggestions, finish.\n\tfunction checkIfFinished() {\n\t\tif ( ! editor.dom.select('span.hiddenSpellError, span.hiddenGrammarError, span.hiddenSuggestion').length ) {\n\t\t\tif ( suggestionsMenu ) {\n\t\t\t\tsuggestionsMenu.hideMenu();\n\t\t\t}\n\n\t\t\tfinish();\n\t\t}\n\t}\n\n\tfunction ignoreWord( target, word, all ) {\n\t\tvar dom = editor.dom;\n\n\t\tif ( all ) {\n\t\t\teach( editor.dom.select( 'span.hiddenSpellError, span.hiddenGrammarError, span.hiddenSuggestion' ), function( node ) {\n\t\t\t\tvar text = node.innerText || node.textContent;\n\n\t\t\t\tif ( text === word ) {\n\t\t\t\t\tdom.remove( node, true );\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tdom.remove( target, true );\n\t\t}\n\n\t\tcheckIfFinished();\n\t}\n\n\t// Called when the user clicks \"Finish\" or when no more suggestions left.\n\t// Removes all remaining spans and fires custom event.\n\tfunction finish() {\n\t\tvar node,\n\t\t\tdom = editor.dom,\n\t\t\tregex = new RegExp( 'mceItemHidden|hidden(((Grammar|Spell)Error)|Suggestion)' ),\n\t\t\tnodes = dom.select('span'),\n\t\t\ti = nodes.length;\n\n\t\twhile ( i-- ) { // reversed\n\t\t\tnode = nodes[i];\n\n\t\t\tif ( node.className && regex.test( node.className ) ) {\n\t\t\t\tdom.remove( node, true );\n\t\t\t}\n\t\t}\n\n\t\t// Rebuild the DOM so AtD core can find the text nodes\n\t\teditor.setContent( editor.getContent({ format: 'raw' }), { format: 'raw' } );\n\n\t\tstarted = false;\n\t\teditor.nodeChanged();\n\t\teditor.fire('SpellcheckEnd');\n\t}\n\n\tfunction sendRequest( file, data, success ) {\n\t\tvar id = editor.getParam( 'atd_rpc_id', '12345678' ),\n\t\t\turl = editor.getParam( 'atd_rpc_url', '{backend}' );\n\n\t\tif ( url === '{backend}' || id === '12345678' ) {\n\t\t\twindow.alert( 'Please specify: atd_rpc_url and atd_rpc_id' );\n\t\t\treturn;\n\t\t}\n\n\t\t// create the nifty spinny thing that says \"hizzo, I'm doing something fo realz\"\n\t\teditor.setProgressState( true );\n\n\t\ttinymce.util.XHR.send({\n\t\t\turl: url + '/' + file,\n\t\t\tcontent_type: 'text/xml',\n\t\t\ttype: 'POST',\n\t\t\tdata: 'data=' + encodeURI( data ).replace( /&/g, '%26' ) + '&key=' + id,\n\t\t\tsuccess: success,\n\t\t\terror: function( type, req, o ) {\n\t\t\t\teditor.setProgressState();\n\t\t\t\twindow.alert( type + '\\n' + req.status + '\\nAt: ' + o.url );\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction storeIgnoredStrings( /*text*/ ) {\n\t\t// Store in sessionStorage?\n\t}\n\n\tfunction setAlwaysIgnore( text ) {\n\t\tvar url = editor.getParam( 'atd_ignore_rpc_url' );\n\n\t\tif ( ! url || url === '{backend}' ) {\n\t\t\t// Store ignored words for this session only\n\t\t\tstoreIgnoredStrings( text );\n\t\t} else {\n\t\t\t// Plugin is configured to send ignore preferences to server, do that\n\t\t\ttinymce.util.XHR.send({\n\t\t\t\turl: url + encodeURIComponent( text ) + '&key=' + editor.getParam( 'atd_rpc_id', '12345678' ),\n\t\t\t\tcontent_type: 'text/xml',\n\t\t\t\ttype: 'GET',\n\t\t\t\terror: function() {\n\t\t\t\t\tstoreIgnoredStrings( text );\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// Update atd_ignore_strings with the new value\n\t\tatdCore.setIgnoreStrings( text );\n\t}\n\n\t// Create the suggestions menu\n\tfunction showSuggestions( target ) {\n\t\tvar pos, root, targetPos,\n\t\t\titems = [],\n\t\t\ttext = target.innerText || target.textContent,\n\t\t\terrorDescription = atdCore.findSuggestion( target );\n\n\t\tif ( ! errorDescription ) {\n\t\t\titems.push({\n\t\t\t\ttext: getLang( 'menu_title_no_suggestions', 'No suggestions' ),\n\t\t\t\tclasses: 'atd-menu-title',\n\t\t\t\tdisabled: true\n\t\t\t});\n\t\t} else {\n\t\t\titems.push({\n\t\t\t\ttext: errorDescription.description,\n\t\t\t\tclasses: 'atd-menu-title',\n\t\t\t\tdisabled: true\n\t\t\t});\n\n\t\t\tif ( errorDescription.suggestions.length ) {\n\t\t\t\titems.push({ text: '-' }); // separator\n\n\t\t\t\teach( errorDescription.suggestions, function( suggestion ) {\n\t\t\t\t\titems.push({\n\t\t\t\t\t\ttext: suggestion,\n\t\t\t\t\t\tonclick: function() {\n\t\t\t\t\t\t\tatdCore.applySuggestion( target, suggestion );\n\t\t\t\t\t\t\tcheckIfFinished();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif ( errorDescription && errorDescription.moreinfo ) {\n\t\t\titems.push({ text: '-' }); // separator\n\n\t\t\titems.push({\n\t\t\t\ttext: getLang( 'menu_option_explain', 'Explain...' ),\n\t\t\t\tonclick : function() {\n\t\t\t\t\teditor.windowManager.open({\n\t\t\t\t\t\ttitle: getLang( 'menu_option_explain', 'Explain...' ),\n\t\t\t\t\t\turl: errorDescription.moreinfo,\n\t\t\t\t\t\twidth: 480,\n\t\t\t\t\t\theight: 380,\n\t\t\t\t\t\tinline: true\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\titems.push.apply( items, [\n\t\t\t{ text: '-' }, // separator\n\n\t\t\t{ text: getLang( 'menu_option_ignore_once', 'Ignore suggestion' ), onclick: function() {\n\t\t\t\tignoreWord( target, text );\n\t\t\t}}\n\t\t]);\n\n\t\tif ( editor.getParam( 'atd_ignore_enable' ) ) {\n\t\t\titems.push({\n\t\t\t\ttext: getLang( 'menu_option_ignore_always', 'Ignore always' ),\n\t\t\t\tonclick: function() {\n\t\t\t\t\tsetAlwaysIgnore( text );\n\t\t\t\t\tignoreWord( target, text, true );\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\titems.push({\n\t\t\t\ttext: getLang( 'menu_option_ignore_all', 'Ignore all' ),\n\t\t\t\tonclick: function() {\n\t\t\t\t\tignoreWord( target, text, true );\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// Render menu\n\t\tsuggestionsMenu = new tinymce.ui.Menu({\n\t\t\titems: items,\n\t\t\tcontext: 'contextmenu',\n\t\t\tonautohide: function( event ) {\n\t\t\t\tif ( isMarkedNode( event.target ) ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t},\n\t\t\tonhide: function() {\n\t\t\t\tsuggestionsMenu.remove();\n\t\t\t\tsuggestionsMenu = null;\n\t\t\t}\n\t\t});\n\n\t\tsuggestionsMenu.renderTo( document.body );\n\n\t\t// Position menu\n\t\tpos = tinymce.DOM.getPos( editor.getContentAreaContainer() );\n\t\ttargetPos = editor.dom.getPos( target );\n\t\troot = editor.dom.getRoot();\n\n\t\t// Adjust targetPos for scrolling in the editor\n\t\tif ( root.nodeName === 'BODY' ) {\n\t\t\ttargetPos.x -= root.ownerDocument.documentElement.scrollLeft || root.scrollLeft;\n\t\t\ttargetPos.y -= root.ownerDocument.documentElement.scrollTop || root.scrollTop;\n\t\t} else {\n\t\t\ttargetPos.x -= root.scrollLeft;\n\t\t\ttargetPos.y -= root.scrollTop;\n\t\t}\n\n\t\tpos.x += targetPos.x;\n\t\tpos.y += targetPos.y;\n\n\t\tsuggestionsMenu.moveTo( pos.x, pos.y + target.offsetHeight );\n\t}\n\n\t// Init everything\n\teditor.on( 'init', function() {\n\t\tif ( typeof window.AtDCore === 'undefined' ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Set dom and atdCore\n\t\tdom = editor.dom;\n\t\tinitAtDCore();\n\n\t\t// add a command to request a document check and process the results.\n\t\teditor.addCommand( 'mceWritingImprovementTool', function( callback ) {\n\t\t\tvar results,\n\t\t\t\terrorCount = 0;\n\n\t\t\tif ( typeof callback !== 'function' ) {\n\t\t\t\tcallback = function(){};\n\t\t\t}\n\n\t\t\t// checks if a global var for click stats exists and increments it if it does...\n\t\t\tif ( typeof window.AtD_proofread_click_count !== 'undefined' ) {\n\t\t\t\twindow.AtD_proofread_click_count++;\n\t\t\t}\n\n\t\t\t// remove the previous errors\n\t\t\tif ( started ) {\n\t\t\t\tfinish();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// send request to our service\n\t\t\tsendRequest( 'checkDocument', editor.getContent({ format: 'raw' }), function( data, request ) {\n\t\t\t\t// turn off the spinning thingie\n\t\t\t\teditor.setProgressState();\n\n\t\t\t\t// if the server is not accepting requests, let the user know\n\t\t\t\tif ( request.status !== 200 || request.responseText.substr( 1, 4 ) === 'html' || ! request.responseXML ) {\n\t\t\t\t\teditor.windowManager.alert(\n\t\t\t\t\t\tgetLang( 'message_server_error', 'There was a problem communicating with the Proofreading service. Try again in one minute.' ),\n\t\t\t\t\t\tcallback(0)\n\t\t\t\t\t);\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// check to see if things are broken first and foremost\n\t\t\t\tif ( request.responseXML.getElementsByTagName('message').item(0) !== null ) {\n\t\t\t\t\teditor.windowManager.alert(\n\t\t\t\t\t\trequest.responseXML.getElementsByTagName('message').item(0).firstChild.data,\n\t\t\t\t\t\tcallback(0)\n\t\t\t\t\t);\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tresults = atdCore.processXML( request.responseXML );\n\n\t\t\t\tif ( results.count > 0 ) {\n\t\t\t\t\terrorCount = markMyWords( results.errors );\n\t\t\t\t}\n\n\t\t\t\tif ( ! errorCount ) {\n\t\t\t\t\teditor.windowManager.alert( getLang( 'message_no_errors_found', 'No writing errors were found.' ) );\n\t\t\t\t} else {\n\t\t\t\t\tstarted = true;\n\t\t\t\t\teditor.fire('SpellcheckStart');\n\t\t\t\t}\n\n\t\t\t\tcallback( errorCount );\n\t\t\t});\n\t\t});\n\n\t\tif ( editor.settings.content_css !== false ) {\n\t\t\t// CSS for underlining suggestions\n\t\t\tdom.addStyle( '.hiddenSpellError{border-bottom:2px solid red;cursor:default;}' +\n\t\t\t\t'.hiddenGrammarError{border-bottom:2px solid green;cursor:default;}' +\n\t\t\t\t'.hiddenSuggestion{border-bottom:2px solid blue;cursor:default;}' );\n\t\t}\n\n\t\t// Menu z-index > DFW\n\t\ttinymce.DOM.addStyle( 'div.mce-floatpanel{z-index:150100 !important;}' );\n\n\t\t// Click on misspelled word\n\t\teditor.on( 'click', function( event ) {\n\t\t\tif ( isMarkedNode( event.target ) ) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\teditor.selection.select( event.target );\n\t\t\t\t// Create the suggestions menu\n\t\t\t\tshowSuggestions( event.target );\n\t\t\t}\n\t\t});\n\t});\n\n\teditor.addMenuItem( 'spellchecker', {\n\t\ttext: getLang( 'button_proofread_tooltip', 'Proofread Writing' ),\n\t\tcontext: 'tools',\n\t\tcmd: 'mceWritingImprovementTool',\n\t\tonPostRender: function() {\n\t\t\tvar self = this;\n\n\t\t\teditor.on('SpellcheckStart SpellcheckEnd', function() {\n\t\t\t\tself.active( started );\n\t\t\t});\n\t\t}\n\t});\n\n\teditor.addButton( 'spellchecker', {\n\t\ttooltip: getLang( 'button_proofread_tooltip', 'Proofread Writing' ),\n\t\tcmd: 'mceWritingImprovementTool',\n\t\tonPostRender: function() {\n\t\t\tvar self = this;\n\n\t\t\teditor.on( 'SpellcheckStart SpellcheckEnd', function() {\n\t\t\t\tself.active( started );\n\t\t\t});\n\t\t}\n\t});\n\n\teditor.on( 'remove', function() {\n\t\tif ( suggestionsMenu ) {\n\t\t\tsuggestionsMenu.remove();\n\t\t\tsuggestionsMenu = null;\n\t\t}\n\t});\n});\n"]}