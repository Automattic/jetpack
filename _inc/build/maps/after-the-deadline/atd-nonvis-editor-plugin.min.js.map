{"version":3,"sources":["after-the-deadline/atd-nonvis-editor-plugin.js"],"names":["AtD_restore_text_area","content","jQuery","get","AtD","remove","html","navigator","appName","replace","window","twemoji","img","indexOf","alt","match","test","val","height","show","AtD_qtbutton","getLang","css","color","siblings","andSelf","attr","undefined","autosave","wp","server","local","resume","AtD_restore_if_proofreading","AtD_unbind_proofreader_listeners","unbind","AtD_bind_proofreader_listeners","focus","click","submit","AtD_check","button","callback","divHeight","isFunction","id","length","editorExpand","hasClass","wpEditorExpand","switchEditors","go","content_canvas","$replacement","$textarea","text","fontFamily","fontSize","lineHeight","after","hide","toolBarHeight","overflow","background-color","white-space","padding","font-family","font-size","line-height","margin-top","suspend","check","success","errorCount","Number","alert","ready","error","editSelection","element","prompt","replaceWith","explain","url","left","screen","width","top","open","ignore","word","ajax","type","rpc_ignore","encodeURI","format","XHR","status","callback_f","QTags","addButton","document","AtD_l10n_r0ar","button_proofread","edButtons","edButton","$"],"mappings":";;;;AAOA,QAASA,yBACR,GAAIC,EAGAC,QAAO,gBAAgBC,IAAI,IAC9BC,IAAIC,OAAO,eACXJ,EAAUC,OAAO,gBAAgBI,SAEjCF,IAAIC,OAAO,WACXJ,EAAUC,OAAO,YAAYI,QAGH,gCAAtBC,UAAUC,UACdP,EAAUA,EAAQQ,QAAQ,oCAAqC,WAIjC,KAAnBC,OAAOC,UAClBV,EAAUA,EAAQQ,QAAS,eAAgB,SAAUG,GAEpD,IAAiC,IAA5BA,EAAIC,QAAS,SAAmB,CACpC,GAAIC,GAAMF,EAAIG,MAAO,gBAErB,IAAKD,GAAOA,EAAI,IAAMJ,OAAOC,QAAQK,KAAMF,EAAI,IAC9C,MAAOA,GAAI,GAIb,MAAOF,MAKTV,OAAO,YAAYe,IAAKhB,EAAQQ,QAAQ,UAAW,KAAKA,QAAQ,UAAW,KAAKA,QAAQ,UAAW,MAClGS,OAAOd,IAAIc,QACXC,OACDjB,OAAO,gBAAgBG,SAElBe,eAEJlB,OAAOkB,cAAcH,IAAKb,IAAIiB,QAAQ,mBAAoB,cAC1DnB,OAAOkB,cAAcE,KAAMC,MAAU,YAGrCrB,OAAQkB,cAAeI,SAAS,SAASC,UAAUC,KAAM,YAAY,QAIhDC,KAAjBvB,IAAIwB,WACHlB,OAAOmB,IAAMnB,OAAOmB,GAAGD,UAAYlB,OAAOmB,GAAGD,SAASE,QAC1DpB,OAAOmB,GAAGD,SAASG,MAAMC,QAAUtB,OAAOmB,GAAGD,SAASG,MAAMC,SAC5DtB,OAAOmB,GAAGD,SAASE,OAAOE,QAAUtB,OAAOmB,GAAGD,SAASE,OAAOE,UAE9DJ,SAAWxB,IAAIwB,UAiBlB,QAASK,+BACHb,cAAgBlB,OAAOkB,cAAcH,QAAUb,IAAIiB,QAAQ,mBAAoB,cACnFrB,wBAKF,QAASkC,oCACRhC,OAAO,yDAAyDiC,OAAO,QAASF,6BAChF/B,OAAO,6DAA6DiC,OAAO,QAASF,6BACpF/B,OAAO,SAASiC,OAAO,SAAUF,6BAGlC,QAASG,kCACRlC,OAAO,yDAAyDmC,MAAOJ,6BACvE/B,OAAO,6DAA6DoC,MAAOL,6BAC3E/B,OAAO,SAASqC,OAAQN,6BAIzB,QAASO,WAAUC,GAClB,GAAIC,GAAUC,CAgBd,IAdKzC,OAAO0C,WAAYH,IACvBC,EAAWD,EAELrB,eACLA,aAAelB,OAAQ,4BAA6BC,IAAK,MAGpDsC,EAAOI,KACZJ,EAASA,EAAO,IAGjBrB,aAAeqB,IAGVvC,OAAO,YAAY4C,OAKxB,WAJK,KAAuBJ,GAC3BA,EAAU,OAEXT,8BAMD,IAAK/B,OAAOkB,cAAcH,QAAUb,IAAIiB,QAAQ,mBAAoB,aACnErB,4BACM,CAEDU,OAAOqC,cAAgB7C,OAAQ,gBAAiB8C,SAAU,oBAC9D5C,IAAI6C,gBAAiB,EAGrB7C,IAAI6C,gBAAiB,EAIf7C,IAAIc,OAoBVd,IAAIc,OAAShB,OAAO,YAAYgB,UAlBhCd,IAAIc,OAAShB,OAAO,YAAYgB,SAChCkB,iCAIAlC,OAAO,oBAAoBwB,KAAM,UAAW,MAAOY,MAAO,WACzDL,8BACAiB,cAAcC,GAAI,UAAW,aAI9B/C,IAAIgD,eAAiBlD,OAAO,YAI5BE,IAAIwB,SAAWA,UAShB1B,OAAOkB,cAAcE,KAAMC,MAAU,QAASN,IAAKb,IAAIiB,QAAQ,mBAAoB,cAAeK,KAAK,YAAY,EAGnH,IAAI2B,GACHC,EAAapD,OAAO,YACpBqD,EAAaD,EAAUrC,MAAMR,QAAS,MAAO,SAAUA,QAAS,KAAM,QAASA,QAAS,MAAO,QAC/F+C,EAAaF,EAAUhC,IAAI,eAC3BmC,EAAaH,EAAUhC,IAAI,aAC3BoC,EAAaJ,EAAUhC,IAAI,cAED,iCAAtBf,UAAUC,UACd+C,EAAOA,EAAK9C,QAAS,aAAc,+BAGpC4C,EAAenD,OAAQ,uCAAyCqD,EAAO,UACvED,EAAUK,MAAON,GAAeO,OAEhCjB,EAAYvC,IAAIc,OAEXyB,EAAY,IAChBA,EAAY,IACDA,EAAY,MACvBA,EAAY,IAEb,IAAIkB,GAAgB3D,OAAO,eAAegB,QAC1CmC,GAAa/B,KACZwC,SAAoB,OACpBC,mBAAoB,QACpBxC,MAAoB,QACpByC,cAAoB,WACpBC,QAAoB,OACpBC,cAAoBV,GAAc,8BAClCW,YAAoBV,GAAY,OAChCW,cAAoBV,GAAc,MAClCxC,OAAoByB,EACpB0B,aAAoBR,EAAc,EAAE,OAIhCnD,OAAOmB,IAAMnB,OAAOmB,GAAGD,UAAYlB,OAAOmB,GAAGD,SAASE,QAC1DpB,OAAOmB,GAAGD,SAASG,MAAMuC,SAAW5D,OAAOmB,GAAGD,SAASG,MAAMuC,UAC7D5D,OAAOmB,GAAGD,SAASE,OAAOwC,SAAW5D,OAAOmB,GAAGD,SAASE,OAAOwC,WAE/D1C,SAAW,aAIZ1B,OAAQkB,cAAeI,SAAS,SAASC,UAAUC,KAAM,YAAY,GAGrEtB,IAAImE,MAAM,eACTC,QAAS,SAASC,GACa,IAAzBC,OAAQD,IAA0C,kBAAb/B,IACzCiC,MAAOvE,IAAIiB,QAAQ,0BAA2B,iCAE/CY,+BAGD2C,MAAO,SAASH,GACfvE,OAAOkB,cAAcM,KAAK,YAAY,GAEb,kBAAbgB,IACXA,EAAU+B,IAIZI,MAAO,WACN3E,OAAOkB,cAAcM,KAAK,YAAY,GAEb,kBAAbgB,GACXA,GAAW,GAEXiC,MAAOvE,IAAIiB,QAAQ,uBAAwB,8FAG5CY,+BAGD6C,cAAe,SAASC,GACvB,GAAIxB,GAAOyB,OAAQ5E,IAAIiB,QAAQ,2BAA4B,2BAA4B0D,EAAQxB,OAElF,OAARA,GACJwB,EAAQE,YAAa1B,IAIvB2B,QAAS,SAASC,GACjB,GAAIC,GAAQC,OAAOC,MAAQ,EAAK,IAC5BC,EAAOF,OAAOnE,OAAS,EAAK,GAChCR,QAAO8E,KAAML,EAAK,GAAI,iFAAmFC,EAAO,QAAUG,GAAKlD,SAGhIoD,OAAQ,SAASC,GAChBxF,OAAOyF,MACNC,KAAO,MACPT,IAAM/E,IAAIyF,WAAaC,UAAWJ,GAAOjF,QAAS,KAAM,OACxDsF,OAAS,MACTlB,MAAQ,SAASmB,EAAKC,EAAQpB,OACLlD,KAAnBvB,IAAI8F,gBAAqDvE,KAAzBvB,IAAI8F,WAAWrB,OACnDzE,IAAI8F,WAAWrB,MAAMoB,EAAS,KAAOpB,UAhQ5C,GAAIzD,cAAcQ,QA6DK,oBAAZ,QAA2BuE,MAAMC,UAC3ClG,OAAOmG,UAAUzB,MAAM,WACtBuB,MAAMC,UAAW,MAAOE,cAAcC,iBAAkB/D,cAGzDgE,UAAUA,UAAU1D,QAAU,GAAI2D,UAAS,SAAU,MAAO,GAAI,GAAI,IACpEvG,OAAOmG,UAAUzB,MAAM,SAAS8B,GAC/BA,EAAE,WAAWzB,YAAY,qGAAuGqB,cAAcC,iBAAmB","file":"../../after-the-deadline/atd-nonvis-editor-plugin.min.js","sourcesContent":["/* Do not modify this file directly. It is compiled from other files. */\n/* jshint devel: true, onevar: false, smarttabs: true */\n/* global AtD, QTags, AtD_l10n_r0ar, edButtons, edButton, switchEditors, AtD_unbind_proofreader_listeners */\n/* exported AtD_unbind_proofreader_listeners */\n\nvar AtD_qtbutton, autosave;\n/* convienence method to restore the text area from the preview div */\nfunction AtD_restore_text_area() {\n\tvar content;\n\n\t/* swap the preview div for the textarea, notice how I have to restore the appropriate class/id/style attributes */\n\tif( jQuery('#atd-content').get(0) ) {\n\t\tAtD.remove('atd-content');\n\t\tcontent = jQuery('#atd-content').html();\n\t} else {\n\t\tAtD.remove('content');\n\t\tcontent = jQuery('#content').html();\n\t}\n\n\tif ( navigator.appName === 'Microsoft Internet Explorer' ) {\n\t\tcontent = content.replace(/<BR.*?class.*?atd_remove_me.*?>/gi, '\\n');\n\t}\n\n\t// Remove emoji replacement images\n\tif ( typeof window.twemoji !== 'undefined' ) {\n\t\tcontent = content.replace( /<img [^>]+>/g, function( img ) {\n\t\t\t// The images should have class containing 'emoji'\n\t\t\tif ( img.indexOf( 'emoji' ) !== -1 ) {\n\t\t\t\tvar alt = img.match( /alt=\"([^\"]+)\"/ );\n\n\t\t\t\tif ( alt && alt[1] && window.twemoji.test( alt[1] ) ) {\n\t\t\t\t\treturn alt[1];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn img;\n\t\t});\n\t}\n\n\t// jQuery('#content').replaceWith( AtD.content_canvas );\n\tjQuery('#content').val( content.replace(/\\&lt\\;/g, '<').replace(/\\&gt\\;/g, '>').replace(/\\&amp;/g, '&') )\n\t.height(AtD.height)\n\t.show();\n\tjQuery('#atd-content').remove();\n\n\tif ( AtD_qtbutton ) {\n\t\t/* change the link text back to its original label */\n\t\tjQuery(AtD_qtbutton).val( AtD.getLang('button_proofread', 'proofread') );\n\t\tjQuery(AtD_qtbutton).css({ 'color' : '#464646' });\n\n\t\t/* enable the toolbar buttons */\n\t\tjQuery( AtD_qtbutton ).siblings('input').andSelf().attr( 'disabled', false );\n\t}\n\n\t/* restore autosave */\n\tif ( AtD.autosave !== undefined ) {\n\t\tif ( window.wp && window.wp.autosave && window.wp.autosave.server ) {\n\t\t\twindow.wp.autosave.local.resume && window.wp.autosave.local.resume();\n\t\t\twindow.wp.autosave.server.resume && window.wp.autosave.server.resume();\n\t\t} else {\n\t\t\tautosave = AtD.autosave;\n\t\t}\n\t}\n}\n\n// add the AtD button properly to quicktags\nif ( typeof(QTags) !== 'undefined' && QTags.addButton ) {\n\tjQuery(document).ready(function(){\n\t\tQTags.addButton( 'AtD', AtD_l10n_r0ar.button_proofread, AtD_check );\n\t});\n} else {\n\tedButtons[edButtons.length] = new edButton('ed_AtD', 'AtD', '', '', '');\n\tjQuery(document).ready(function($){\n\t\t$('#ed_AtD').replaceWith('<input type=\"button\" id=\"ed_AtD\" accesskey=\"\" class=\"ed_button\" onclick=\"AtD_check(this);\" value=\"' + AtD_l10n_r0ar.button_proofread + '\" />');\n\t});\n}\n\nfunction AtD_restore_if_proofreading() {\n\tif ( AtD_qtbutton && jQuery(AtD_qtbutton).val() === AtD.getLang('button_edit_text', 'edit text') ) {\n\t\tAtD_restore_text_area();\n\t}\n}\n\n/* exported AtD_unbind_proofreader_listeners */\nfunction AtD_unbind_proofreader_listeners() {\n\tjQuery('#save-post, #post-preview, #publish, #edButtonPreview').unbind('focus', AtD_restore_if_proofreading );\n\tjQuery('#add_poll, #add_image, #add_video, #add_audio, #add_media').unbind('click', AtD_restore_if_proofreading );\n\tjQuery('#post').unbind('submit', AtD_restore_if_proofreading );\n}\n\nfunction AtD_bind_proofreader_listeners() {\n\tjQuery('#save-post, #post-preview, #publish, #edButtonPreview').focus( AtD_restore_if_proofreading );\n\tjQuery('#add_poll, #add_image, #add_video, #add_audio, #add_media').click( AtD_restore_if_proofreading );\n\tjQuery('#post').submit( AtD_restore_if_proofreading );\n}\n\n/* where the magic happens, checks the spelling or restores the form */\nfunction AtD_check(button) {\n\tvar callback, divHeight;\n\n\tif ( jQuery.isFunction( button ) ) {\n\t\tcallback = button;\n\n\t\tif ( !AtD_qtbutton ) {\n\t\t\tAtD_qtbutton = jQuery( '#qt_content_AtD, #ed_AtD' ).get( 0 );\n\t\t}\n\t} else {\n\t\tif ( !button.id ) {\n\t\t\tbutton = button[0];\n\t\t}\n\n\t\tAtD_qtbutton = button;\n\t}\n\n\tif ( !jQuery('#content').length ) {\n\t\tif ( 'undefined' !== typeof callback ) {\n\t\t\tcallback( 0 );\n\t\t}\n\t\tAtD_restore_if_proofreading();\n\t\treturn;\n\t}\n\n\t/* If the text of the link says edit comment, then restore the textarea so the user can edit the text */\n\n\tif ( jQuery(AtD_qtbutton).val() === AtD.getLang('button_edit_text', 'edit text') ) {\n\t\tAtD_restore_text_area();\n\t} else {\n\t\t// Disable editor expand/scroll\n\t\tif ( window.editorExpand && jQuery( '#postdivrich' ).hasClass( 'wp-editor-expand' ) ) {\n\t\t\tAtD.wpEditorExpand = true;\n\t\t\t// window.editorExpand.off && window.editorExpand.off();\n\t\t} else {\n\t\t\tAtD.wpEditorExpand = false;\n\t\t}\n\n\t\t/* initialize some of the stuff related to this plugin */\n\t\tif ( ! AtD.height ) {\n\n\t\t\tAtD.height = jQuery('#content').height();\n\t\t\tAtD_bind_proofreader_listeners();\n\n\t\t\t/* make it so clicking the Visual button works when AtD is active */\n\n\t\t\tjQuery('#edButtonPreview').attr( 'onclick', null ).click( function() {\n\t\t\t\tAtD_restore_if_proofreading();\n\t\t\t\tswitchEditors.go( 'content', 'tinymce' );\n\t\t\t});\n\n\t\t\t/* saved the textarea as we need to restore the original one for the toolbar to continue to function properly */\n\t\t\tAtD.content_canvas = jQuery('#content');\n\n\t\t\t/* store the autosave, we're going to make it empty during spellcheck to prevent auto saved text from being\n\t\t\t   over written with empty text */\n\t\t\tAtD.autosave = autosave;\n\t\t} else {\n\t\t\t// Update the height\n\t\t\tAtD.height = jQuery('#content').height();\n\t\t}\n\n\t\t/* set the spell check link to a link that lets the user edit the text */\n\t\t/* disable the button to prevent a race condition where content is deleted if proofread is clicked with a check\n\t\t   in progress. */\n\t\tjQuery(AtD_qtbutton).css({ 'color' : 'red' }).val( AtD.getLang('button_edit_text', 'edit text') ).attr('disabled', true);\n\n\t\t/* replace the div */\n\t\tvar $replacement,\n\t\t\t$textarea  = jQuery('#content'),\n\t\t\ttext       = $textarea.val().replace( /\\&/g, '&amp;' ).replace( /</g, '&lt;' ).replace( /\\>/g, '&gt;' ),\n\t\t\tfontFamily = $textarea.css('font-family'),\n\t\t\tfontSize   = $textarea.css('font-size'),\n\t\t\tlineHeight = $textarea.css('line-height');\n\n\t\tif ( navigator.appName === 'Microsoft Internet Explorer' ) {\n\t\t\ttext = text.replace( /[\\n\\r\\f]/gm, '<BR class=\"atd_remove_me\">' );\n\t\t}\n\n\t\t$replacement = jQuery( '<div class=\"input\" id=\"atd-content\">' + text + '</div>' );\n\t\t$textarea.after( $replacement ).hide();\n\n\t\tdivHeight = AtD.height;\n\t\t// AtD disables resizing of the Text editor, normalize the size of the replacement div.\n\t\tif ( divHeight < 200 ) {\n\t\t\tdivHeight = 200;\n\t\t} else if ( divHeight > 1000 ) {\n\t\t\tdivHeight = 1000;\n\t\t}\n\t\tvar toolBarHeight = jQuery('#ed_toolbar').height();\n\t\t$replacement.css( {\n\t\t\toverflow:           'auto',\n\t\t\t'background-color': 'white',\n\t\t\tcolor:              'black',\n\t\t\t'white-space':      'pre-wrap',\n\t\t\tpadding:            '10px',\n\t\t\t'font-family':      fontFamily || 'Consolas, Monaco, monospace',\n\t\t\t'font-size':        fontSize || '13px',\n\t\t\t'line-height':      lineHeight || '1.5',\n\t\t\theight:             divHeight,\n\t\t\t'margin-top':       toolBarHeight+7+'px'\n\t\t} );\n\n\t\t/* kill autosave... :) */\n\t\tif ( window.wp && window.wp.autosave && window.wp.autosave.server ) {\n\t\t\twindow.wp.autosave.local.suspend && window.wp.autosave.local.suspend();\n\t\t\twindow.wp.autosave.server.suspend && window.wp.autosave.server.suspend();\n\t\t} else {\n\t\t\tautosave = function() { };\n\t\t}\n\n\t\t/* disable the toolbar buttons */\n\t\tjQuery( AtD_qtbutton ).siblings('input').andSelf().attr( 'disabled', true ); // using .arrt instead of .prop so it's compat with older WP and jQuery\n\n\t\t/* check the writing in the textarea */\n\t\tAtD.check('atd-content', {\n\t\t\tsuccess: function(errorCount) {\n\t\t\t\tif ( Number( errorCount ) === 0 && typeof callback !== 'function' ) {\n\t\t\t\t\talert( AtD.getLang('message_no_errors_found', 'No writing errors were found') );\n\t\t\t\t}\n\t\t\t\tAtD_restore_if_proofreading();\n\t\t\t},\n\n\t\t\tready: function(errorCount) {\n\t\t\t\tjQuery(AtD_qtbutton).attr('disabled', false);\n\n\t\t\t\tif ( typeof callback === 'function' ) {\n\t\t\t\t\tcallback( errorCount );\n\t\t\t\t}\n\t\t\t},\n\n\t\t\terror: function() {\n\t\t\t\tjQuery(AtD_qtbutton).attr('disabled', false);\n\n\t\t\t\tif ( typeof callback === 'function' ) {\n\t\t\t\t\tcallback( -1 );\n\t\t\t\t} else {\n\t\t\t\t\talert( AtD.getLang('message_server_error', 'There was a problem communicating with the Proofreading service. Try again in one minute.') );\n\t\t\t\t}\n\n\t\t\t\tAtD_restore_if_proofreading();\n\t\t\t},\n\n\t\t\teditSelection: function(element) {\n\t\t\t\tvar text = prompt( AtD.getLang('dialog_replace_selection', 'Replace selection with:'), element.text() );\n\n\t\t\t\tif ( text != null ) {\n\t\t\t\t\telement.replaceWith( text );\n\t\t\t\t}\n\t\t\t},\n\n\t\t\texplain: function(url) {\n\t\t\t\tvar left = (screen.width / 2) - (480 / 2);\n\t\t\t\tvar top = (screen.height / 2) - (380 / 2);\n\t\t\t\twindow.open( url, '', 'width=480,height=380,toolbar=0,status=0,resizable=0,location=0,menuBar=0,left=' + left + ',top=' + top).focus();\n\t\t\t},\n\n\t\t\tignore: function(word) {\n\t\t\t\tjQuery.ajax({\n\t\t\t\t\ttype : 'GET',\n\t\t\t\t\turl : AtD.rpc_ignore + encodeURI( word ).replace( /&/g, '%26'),\n\t\t\t\t\tformat : 'raw',\n\t\t\t\t\terror : function(XHR, status, error) {\n\t\t\t\t\t\tif ( AtD.callback_f !== undefined && AtD.callback_f.error !== undefined ) {\n\t\t\t\t\t\t\tAtD.callback_f.error(status + ': ' + error);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n}\n"]}