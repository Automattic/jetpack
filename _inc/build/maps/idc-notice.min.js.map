{"version":3,"sources":["idc-notice.js"],"names":["$","disableDopsButtons","idcButtons","prop","enableDopsButtons","confirmSafeMode","errorNotice","hide","trackAndBumpMCStats","route","restRoot","ajax","method","beforeSend","xhr","setRequestHeader","restNonce","url","data","success","notice","adminBarMenu","removeClass","window","location","search","indexOf","reload","error","erroredAction","displayErrorNotice","migrateStatsAndSubscribers","hasClass","fixJetpackConnection","addClass","startFreshConnection","connectUrl","errorDescription","responseJSON","message","html","css","eventName","extraProps","length","analytics","tracks","mc","replace","recordEvent","bumpStat","idcL10n","nonce","currentUrl","apiRoot","tracksUser","tracksUserData","tracksEvent","tracksEventData","confirmSafeModeButton","fixConnectionButton","migrateButton","reconnectButton","initialize","userid","username","isAdmin","page","currentScreen","allowReload","history","pushState","href","on","secure","protocol","wpCookies","set","jQuery"],"mappings":"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","file":"../idc-notice.min.js","sourcesContent":["/* Do not modify this file directly. It is compiled from other files. */\n/* global idcL10n, jQuery, analytics, history, wpCookies */\n\n( function( $ ) {\n\tvar restNonce = idcL10n.nonce,\n\t\tcurrentUrl = idcL10n.currentUrl,\n\t\trestRoot = idcL10n.apiRoot,\n\t\tnotice = $( '.jp-idc-notice' ),\n\t\tidcButtons = $( '.jp-idc-notice .dops-button' ),\n\t\ttracksUser = idcL10n.tracksUserData,\n\t\ttracksEvent = idcL10n.tracksEventData,\n\t\tadminBarMenu = $( '#wp-admin-bar-jetpack-idc' ),\n\t\tconfirmSafeModeButton = $( '#jp-idc-confirm-safe-mode-action' ),\n\t\tfixConnectionButton = $( '#jp-idc-fix-connection-action' ),\n\t\tmigrateButton = $( '#jp-idc-migrate-action'),\n\t\treconnectButton = $( '#jp-idc-reconnect-site-action' ),\n\t\terrorNotice = $( '.jp-idc-error__notice'),\n\t\terroredAction = false;\n\n\t// Initialize Tracks and bump stats.\n\tif ( 'undefined' !== typeof analytics ) {\n\t\tanalytics.initialize( tracksUser.userid, tracksUser.username );\n\t}\n\n\tif ( tracksEvent.isAdmin ) {\n\t\ttrackAndBumpMCStats( 'notice_view' );\n\t} else {\n\t\ttrackAndBumpMCStats( 'non_admin_notice_view', { 'page': tracksEvent.currentScreen } );\n\t}\n\tclearConfirmationArgsFromUrl();\n\n\t// If the user dismisses the notice, set a cookie for one week so we don't display it for that time.\n\tnotice.on( 'click', '.notice-dismiss', function() {\n\t\tvar secure = ( 'https:' === window.location.protocol );\n\t\twpCookies.set( 'jetpack_idc_dismiss_notice', '1', 7 * 24 * 60 * 60, false, false, secure );\n\t\ttrackAndBumpMCStats( 'non_admin_notice_dismiss', { 'page': tracksEvent.currentScreen } );\n\t} );\n\n\tnotice.on( 'click', '#jp-idc-error__action', function() {\n\t\terrorNotice.hide();\n\t\tswitch( erroredAction ) {\n\t\t\tcase 'confirm':\n\t\t\t\tconfirmSafeMode();\n\t\t\t\tbreak;\n\t\t\tcase 'start-fresh':\n\t\t\t\tstartFreshConnection();\n\t\t\t\tbreak;\n\t\t\tcase 'migrate':\n\t\t\t\tmigrateStatsAndSubscribers();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn;\n\t\t}\n\t} );\n\n\t// Confirm Safe Mode\n\tconfirmSafeModeButton.on( 'click', confirmSafeMode );\n\n\t// Fix connection\n\tfixConnectionButton.on( 'click', fixJetpackConnection );\n\n\t// Start fresh connection\n\treconnectButton.on( 'click', startFreshConnection );\n\n\t// Starts migration process.\n\tmigrateButton.on( 'click', migrateStatsAndSubscribers );\n\n\tfunction disableDopsButtons() {\n\t\tidcButtons.prop( 'disabled', true );\n\t}\n\n\tfunction enableDopsButtons() {\n\t\tidcButtons.prop( 'disabled', false );\n\t}\n\n\tfunction clearConfirmationArgsFromUrl( allowReload ) {\n\t\tallowReload = 'undefined' === typeof allowReload ? false : allowReload;\n\n\t\t// If the jetpack_idc_clear_confirmation query arg is present, let's try to clear it.\n\t\t//\n\t\t// Otherwise, there's a weird flow where if the user dismisses the notice, then shows the notice, then clicks\n\t\t// the confirm safe mode button again, and then reloads the page, then the notice never disappears.\n\t\tif ( window.location.search && -1 !== window.location.search.indexOf( 'jetpack_idc_clear_confirmation' ) ) {\n\t\t\ttrackAndBumpMCStats( 'clear_confirmation_clicked' );\n\n\t\t\t// If push state is available, let's use that to minimize reloading the page.\n\t\t\t// Otherwise, we can clear the args by reloading the page.\n\t\t\tif ( history && history.pushState ) {\n\t\t\t\thistory.pushState( {}, '', currentUrl );\n\t\t\t} else if ( allowReload ) {\n\t\t\t\twindow.location.href = currentUrl;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction confirmSafeMode() {\n\t\terrorNotice.hide();\n\t\ttrackAndBumpMCStats( 'confirm_safe_mode' );\n\n\t\tvar route = restRoot + 'jetpack/v4/identity-crisis/confirm-safe-mode';\n\t\tdisableDopsButtons();\n\t\t$.ajax( {\n\t\t\tmethod: 'POST',\n\t\t\tbeforeSend : function ( xhr ) {\n\t\t\t\txhr.setRequestHeader( 'X-WP-Nonce', restNonce );\n\t\t\t},\n\t\t\turl: route,\n\t\t\tdata: {},\n\t\t\tsuccess: function() {\n\t\t\t\tnotice.hide();\n\t\t\t\tadminBarMenu.removeClass( 'hide' );\n\n\t\t\t\t// We must refresh the Jetpack admin UI page in order for the React UI to render.\n\t\t\t\tif ( window.location.search && 1 === window.location.search.indexOf( 'page=jetpack' ) ) {\n\t\t\t\t\twindow.location.reload();\n\t\t\t\t}\n\t\t\t},\n\t\t\terror: function( error ) {\n\t\t\t\terroredAction = 'confirm';\n\t\t\t\tdisplayErrorNotice( error );\n\t\t\t\tenableDopsButtons();\n\t\t\t}\n\t\t} );\n\t}\n\n\tfunction migrateStatsAndSubscribers() {\n\t\terrorNotice.hide();\n\t\ttrackAndBumpMCStats( 'migrate' );\n\n\t\tvar route = restRoot + 'jetpack/v4/identity-crisis/migrate';\n\t\tdisableDopsButtons();\n\t\t$.ajax( {\n\t\t\tmethod: 'POST',\n\t\t\tbeforeSend : function ( xhr ) {\n\t\t\t\txhr.setRequestHeader( 'X-WP-Nonce', restNonce );\n\t\t\t},\n\t\t\turl: route,\n\t\t\tdata: {},\n\t\t\tsuccess: function() {\n\t\t\t\tnotice.hide();\n\t\t\t\tif ( $( 'body' ).hasClass( 'toplevel_page_jetpack' ) ) {\n\t\t\t\t\t// On the main Jetpack page, sites in IDC will not see Jetpack's interface.\n\t\t\t\t\t// Once IDC is resolved, we need to refresh the page to regain access to the UI.\n\t\t\t\t\twindow.location.reload( true );\n\t\t\t\t}\n\t\t\t},\n\t\t\terror: function( error ) {\n\t\t\t\terroredAction = 'migrate';\n\t\t\t\tdisplayErrorNotice( error );\n\t\t\t\tenableDopsButtons();\n\t\t\t}\n\t\t} );\n\t}\n\n\tfunction fixJetpackConnection() {\n\t\terrorNotice.hide();\n\t\ttrackAndBumpMCStats( 'fix_connection' );\n\t\tnotice.addClass( 'jp-idc-show-second-step' );\n\t}\n\n\t/**\n\t * On successful request of the endpoint, we will redirect to the\n\t * connection auth flow after appending a specific 'from=' param for tracking.\n\t */\n\tfunction startFreshConnection() {\n\t\terrorNotice.hide();\n\t\ttrackAndBumpMCStats( 'start_fresh' );\n\n\t\tvar route = restRoot + 'jetpack/v4/identity-crisis/start-fresh';\n\t\tdisableDopsButtons();\n\t\t$.ajax( {\n\t\t\tmethod: 'POST',\n\t\t\tbeforeSend : function ( xhr ) {\n\t\t\t\txhr.setRequestHeader( 'X-WP-Nonce', restNonce );\n\t\t\t},\n\t\t\turl: route,\n\t\t\tdata: {},\n\t\t\tsuccess: function( connectUrl ){\n\t\t\t\t// Add a from param and take them to connect.\n\t\t\t\twindow.location = connectUrl + '&from=idc-notice';\n\t\t\t},\n\t\t\terror: function( error ) {\n\t\t\t\terroredAction = 'start-fresh';\n\t\t\t\tdisplayErrorNotice( error );\n\t\t\t\tenableDopsButtons();\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Displays an error message from the REST endpoints we're hitting.\n\t *\n\t * @param error {Object} Object containing the errored response from the API\n\t */\n\tfunction displayErrorNotice( error ) {\n\t\tvar errorDescription = $( '.jp-idc-error__desc' );\n\t\tif ( error && error.responseJSON && error.responseJSON.message ) {\n\t\t\terrorDescription.html( error.responseJSON.message );\n\t\t} else {\n\t\t\terrorDescription.html( '' );\n\t\t}\n\t\terrorNotice.css( 'display', 'flex' );\n\t}\n\n\t/**\n\t * This function will fire both a Tracks and MC stat.\n\t * It will make sure to format the event name properly for the given stat home.\n\t *\n\t * Tracks: Will be prefixed by 'jetpack_idc_' and use underscores.\n\t * MC: Will not be prefixed, and will use dashes.\n\t *\n\t * @param eventName string\n\t * @param extraProps object\n\t */\n\tfunction trackAndBumpMCStats( eventName, extraProps ) {\n\t\tif ( 'undefined' === typeof extraProps || 'object' !== typeof extraProps ) {\n\t\t\textraProps = {};\n\t\t}\n\n\t\tif ( eventName && eventName.length && 'undefined' !== typeof analytics && analytics.tracks && analytics.mc ) {\n\t\t\t// Format for Tracks\n\t\t\teventName = eventName.replace( /-/g, '_' );\n\t\t\teventName = eventName.indexOf( 'jetpack_idc_' ) !== 0 ? 'jetpack_idc_' + eventName : eventName;\n\t\t\tanalytics.tracks.recordEvent( eventName, extraProps );\n\n\t\t\t// Now format for MC stats\n\t\t\teventName = eventName.replace( 'jetpack_idc_', '' );\n\t\t\teventName = eventName.replace( /_/g, '-' );\n\t\t\tanalytics.mc.bumpStat( 'jetpack-idc', eventName );\n\t\t}\n\t}\n})( jQuery );\n"]}