{"version":3,"sources":["jquery.jetpack-resize.js"],"names":["$","URLtoOrigin","setupListener","destroyListener","methods","listening","sourceOrigins","$sources","window","Jetpack","getTarget","context","this","jQuery","filter","fn","namespace","apply","Array","prototype","slice","call","arguments","error","postMessage","extend","resizeable","URL","match","document","location","href","split","join","on","e","data","event","originalEvent","inArray","origin","JSON","parse","err","action","name","source","contentWindow","first","off","removeClass","target","each","push","attr","addClass","pos","splice","resize","dimensions","i","variable","container","value","parseInt","parent","hasClass","method"],"mappings":"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","file":"../jquery.jetpack-resize.min.js","sourcesContent":["/* Do not modify this file directly. It is compiled from other files. */\n/* global Jetpack, JSON */\n/**\n * Resizeable Iframes.\n *\n * Start listening to resize postMessage events for selected iframes:\n * $( selector ).Jetpack( 'resizeable' );\n * - OR -\n * Jetpack.resizeable( 'on', context );\n *\n * Resize selected iframes:\n * $( selector ).Jetpack( 'resizeable', 'resize', { width: 100, height: 200 } );\n * - OR -\n * Jetpack.resizeable( 'resize', { width: 100, height: 200 }, context );\n *\n * Stop listening to resize postMessage events for selected iframes:\n * $( selector ).Jetpack( 'resizeable', 'off' );\n * - OR -\n * Jetpack.resizeable( 'off', context );\n *\n * Stop listening to all resize postMessage events:\n * Jetpack.resizeable( 'off' );\n */\n(function($) {\n\tvar listening     = false, // Are we listening for resize postMessage events\n\t\tsourceOrigins = [],    // What origins are allowed to send resize postMessage events\n\t\t$sources      = false, // What iframe elements are we tracking resize postMessage events from\n\n\t\tURLtoOrigin,     // Utility to convert URLs into origins\n\t\tsetupListener,   // Binds global resize postMessage event handler\n\t\tdestroyListener, // Unbinds global resize postMessage event handler\n\n\t\tmethods; // Jetpack.resizeable methods\n\n\t// Setup the Jetpack global\n\tif ( 'undefined' === typeof window.Jetpack ) {\n\t\twindow.Jetpack = {\n\t\t\t/**\n\t\t\t * Handles the two different calling methods:\n\t\t\t * $( selector ).Jetpack( 'namespace', 'method', context ) // here, context is optional and is used to filter the collection\n\t\t\t * - vs. -\n\t\t\t * Jetpack.namespace( 'method', context ) // here context defines the collection\n\t\t\t *\n\t\t\t * @internal\n\t\t\t *\n\t\t\t * Call as: Jetpack.getTarget.call( this, context )\n\t\t\t *\n\t\t\t * @param string context: jQuery selector\n\t\t\t * @return jQuery|undefined object on which to perform operations or undefined when context cannot be determined\n\t\t\t */\n\t\t\tgetTarget: function( context ) {\n\t\t\t\tif ( this instanceof jQuery ) {\n\t\t\t\t\treturn context ? this.filter( context ) : this;\n\t\t\t\t}\n\n\t\t\t\treturn context ? $( context ) : context;\n\t\t\t}\n\t\t};\n\t}\n\n\t// Setup the Jetpack jQuery method\n\tif ( 'undefined' === typeof $.fn.Jetpack ) {\n\t\t/**\n\t\t * Dispatches calls to the correct namespace\n\t\t *\n\t\t * @param string namespace\n\t\t * @param ...\n\t\t * @return mixed|jQuery (chainable)\n\t\t */\n\t\t$.fn.Jetpack = function( namespace ) {\n\t\t\tif ( 'function' === typeof Jetpack[namespace] ) {\n\t\t\t\t// Send the call to the correct Jetpack.namespace\n\t\t\t\treturn Jetpack[namespace].apply( this, Array.prototype.slice.call( arguments, 1 ) );\n\t\t\t} else {\n\t\t\t\t$.error( 'Namespace \"' + namespace + '\" does not exist on jQuery.Jetpack' );\n\t\t\t}\n\t\t};\n\t}\n\n\t// Define Jetpack.resizeable() namespace to just always bail if no postMessage\n\tif ( 'function' !== typeof window.postMessage ) {\n\t\t$.extend( window.Jetpack, {\n\t\t\t/**\n\t\t\t * Defines the Jetpack.resizeable() namespace.\n\t\t\t * See below for non-trivial definition for browsers with postMessage.\n\t\t\t */\n\t\t\tresizeable: function() {\n\t\t\t\t$.error( 'Browser does not support window.postMessage' );\n\t\t\t}\n\t\t} );\n\n\t\treturn;\n\t}\n\n\t/**\n\t * Utility to convert URLs into origins\n\t *\n\t * http://example.com:port/path?query#fragment -> http://example.com:port\n\t *\n\t * @param string URL\n\t * @return string origin\n\t */\n\tURLtoOrigin = function( URL ) {\n\t\tif ( ! URL.match( /^https?:\\/\\// ) ) {\n\t\t\tURL = document.location.href;\n\t\t}\n\t\treturn URL.split( '/' ).slice( 0, 3 ).join( '/' );\n\t};\n\n\t/**\n\t * Binds global resize postMessage event handler\n\t */\n\tsetupListener = function() {\n\t\tlistening = true;\n\n\t\t$( window ).on( 'message.JetpackResizeableIframe', function( e ) {\n\t\t\tvar event = e.originalEvent,\n\t\t\t\tdata;\n\n\t\t\t// Ensure origin is allowed\n\t\t\tif ( -1 === $.inArray( event.origin, sourceOrigins ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Some browsers send structured data, some send JSON strings\n\t\t\tif ( 'object' === typeof event.data ) {\n\t\t\t\tdata = event.data.data;\n\t\t\t} else {\n\t\t\t\ttry {\n\t\t\t\t\tdata = JSON.parse( event.data );\n\t\t\t\t} catch ( err ) {\n\t\t\t\t\tdata = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( !data.data ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Un-nest\n\t\t\tdata = data.data;\n\n\t\t\t// Is it a resize event?\n\t\t\tif ( 'undefined' === typeof data.action || 'resize' !== data.action ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Find the correct iframe and resize it\n\t\t\t$sources.filter( function() {\n\t\t\t\tif ( 'undefined' !== typeof data.name ) {\n\t\t\t\t\treturn this.name === data.name;\n\t\t\t\t} else {\n\t\t\t\t\treturn event.source === this.contentWindow;\n\t\t\t\t}\n\t\t\t} ).first().Jetpack( 'resizeable', 'resize', data );\n\t\t} );\n\t};\n\n\t/**\n\t * Unbinds global resize postMessage event handler\n\t */\n\tdestroyListener = function() {\n\t\tlistening = false;\n\t\t$( window ).off( 'message.JetpackResizeableIframe' );\n\n\t\tsourceOrigins = [];\n\t\t$( '.jetpack-resizeable' ).removeClass( 'jetpack-resizeable' );\n\t\t$sources = false;\n\t};\n\n\t// Methods for Jetpack.resizeable() namespace\n\tmethods = {\n\t\t/**\n\t\t * Start listening for resize postMessage events on the given iframes\n\t\t *\n\t\t * Call statically as: Jetpack.resizeable( 'on', context )\n\t\t * Call as: $( selector ).Jetpack( 'resizeable', 'on', context ) // context optional: used to filter the collectino\n\t\t *\n\t\t * @param string context jQuery selector.\n\t\t * @return jQuery (chainable)\n\t\t */\n\t\ton: function( context ) {\n\t\t\tvar target = Jetpack.getTarget.call( this, context );\n\n\t\t\tif ( ! listening ) {\n\t\t\t\tsetupListener();\n\t\t\t}\n\n\t\t\ttarget.each( function() {\n\t\t\t\tsourceOrigins.push( URLtoOrigin( $( this ).attr( 'src' ) ) );\n\t\t\t} ).addClass( 'jetpack-resizeable' );\n\n\t\t\t$sources = $( '.jetpack-resizeable' );\n\n\t\t\treturn target;\n\t\t},\n\n\t\t/**\n\t\t * Stop listening for resize postMessage events on the given iframes\n\t\t *\n\t\t * Call statically as: Jetpack.resizeable( 'off', context )\n\t\t * Call as: $( selector ).Jetpack( 'resizeable', 'off', context ) // context optional: used to filter the collectino\n\t\t *\n\t\t * @param string context jQuery selector\n\t\t * @return jQuery (chainable)\n\t\t */\n\t\toff: function( context ) {\n\t\t\tvar target = Jetpack.getTarget.call( this, context );\n\n\t\t\tif ( 'undefined' === typeof target ) {\n\t\t\t\tdestroyListener();\n\n\t\t\t\treturn target;\n\t\t\t}\n\n\t\t\ttarget.each( function() {\n\t\t\t\tvar origin = URLtoOrigin( $( this ).attr( 'src' ) ),\n\t\t\t\t\tpos = $.inArray( origin, sourceOrigins );\n\n\t\t\t\tif ( -1 !== pos ) {\n\t\t\t\t\tsourceOrigins.splice( pos, 1 );\n\t\t\t\t}\n\t\t\t} ).removeClass( 'jetpack-resizeable' );\n\n\t\t\t$sources = $( '.jetpack-resizeable' );\n\n\t\t\treturn target;\n\t\t},\n\n\t\t/**\n\t\t * Resize the given iframes\n\t\t *\n\t\t * Call statically as: Jetpack.resizeable( 'resize', dimensions, context )\n\t\t * Call as: $( selector ).Jetpack( 'resizeable', 'resize', dimensions, context ) // context optional: used to filter the collectino\n\t\t *\n\t\t * @param object dimensions in pixels: { width: (int), height: (int) }\n\t\t * @param string context jQuery selector\n\t\t * @return jQuery (chainable)\n\t\t */\n\t\tresize: function( dimensions, context ) {\n\t\t\tvar target = Jetpack.getTarget.call( this, context );\n\n\t\t\t$.each( [ 'width', 'height' ], function( i, variable ) {\n\t\t\t\tvar value = 0,\n\t\t\t\t\tcontainer;\n\t\t\t\tif ( 'undefined' !== typeof dimensions[variable] ) {\n\t\t\t\t\tvalue = parseInt( dimensions[variable], 10 );\n\t\t\t\t}\n\n\t\t\t\tif ( 0 !== value ) {\n\t\t\t\t\ttarget[variable]( value );\n\t\t\t\t\tcontainer = target.parent();\n\t\t\t\t\tif ( container.hasClass( 'slim-likes-widget' ) ) {\n\t\t\t\t\t\tcontainer[variable]( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\treturn target;\n\t\t}\n\t};\n\n\t// Define Jetpack.resizeable() namespace\n\t$.extend( window.Jetpack, {\n\t\t/**\n\t\t * Defines the Jetpack.resizeable() namespace.\n\t\t * See above for trivial definition for browsers with no postMessage.\n\t\t *\n\t\t * @param string method\n\t\t * @param ...\n\t\t * @return mixed|jQuery (chainable)\n\t\t */\n\t\tresizeable: function( method ) {\n\t\t\tif ( methods[method] ) {\n\t\t\t\t// Send the call to the correct Jetpack.resizeable() method\n\t\t\t\treturn methods[method].apply( this, Array.prototype.slice.call( arguments, 1 ) );\n\t\t\t} else if ( ! method ) {\n\t\t\t\t// By default, send to Jetpack.resizeable( 'on' ), which isn't useful in that form but is when called as\n\t\t\t\t// jQuery( selector ).Jetpack( 'resizeable' )\n\t\t\t\treturn methods.on.apply( this );\n\t\t\t} else {\n\t\t\t\t$.error( 'Method ' +  method + ' does not exist on Jetpack.resizeable' );\n\t\t\t}\n\t\t}\n\t} );\n})(jQuery);\n"]}