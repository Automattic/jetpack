/**
 * Podcast Player block shared styles (editor & front-end).
 */

$episode-v-padding: 15px;
$episode-h-padding: 10px;
$episode-status-icon-size: 22px;
$text-color: #92959a;
$text-color-hover: #000;
$text-color-active: $text-color-hover;
$text-color-error: #db5051;
$block-bg-color: #fff;
$block-border-color: $text-color;
$font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue', sans-serif;
$font-size: 16px;

/**
 * Player's (block) parent element
 */
.wp-block-jetpack-podcast-player {
	border: 1px solid $text-color;
	background-color: $block-bg-color;

	// Player's state classes added to this element:
	// &.is-playing {} // When audio starts playing
	// &.is-paused {}  // When audio is paused
	// &.is-error {}   // When playback error occured

	audio {
		display: none;
	}
}

.podcast-player__episodes {
	list-style-type: none;
	display: flex;
	flex-direction: column;

	margin: 0;
	padding: $episode-v-padding 0;
}

.podcast-player__episode {
	margin: 0;
	color: $text-color;

	&:hover {
		color: $text-color-hover;
	}

	/**
     * When episode "is-active", it means that it's been clicked by a user to
     * start playback. Combine this class with the Player's state classes (see
     * above) to apply styling for different scenarios.
     */
	&.is-active {
		color: $text-color-hover;
		font-weight: bold;
	}
}

.podcast-player__episode-link {
	display: flex;
	flex-flow: row nowrap;
	justify-content: space-between;
	padding: $episode-h-padding $episode-v-padding;
	font-family: $font-family;
	font-size: $font-size;

	text-decoration: none;
	color: inherit;

	.podcast-player__episode.is-active & {
		.wp-block-jetpack-podcast-player.is-error {
			padding-bottom: 0; // Make space for the error element that will be appended.
		}
	}
}

.podcast-player__episode-status-icon {
	width: $episode-status-icon-size;

	.podcast-player__episode.is-active & {
		.wp-block-jetpack-podcast-player.is-paused & {
			fill: none; // Currently there's no icon for paused state.
		}
		.wp-block-jetpack-podcast-player.is-playing & {
			fill: $text-color-active;
		}
		.wp-block-jetpack-podcast-player.is-error & {
			fill: $text-color-error;
		}
	}
}

.podcast-player__episode-title {
	flex-grow: 1;
	padding: 0 $episode-v-padding;
}

.podcast-player__episode-duration {
	word-break: normal;
}

/**
 * Error element, appended as the last child of the Episode element
 * (.podcast-player__episode) when Player's error has been caught.
 */
.podcast-player__episode-error {
	display: none;
	margin-left: 2 * $episode-v-padding + $episode-status-icon-size;
	margin-bottom: $episode-h-padding;
	color: $text-color-error;
	font-family: $font-family;
	font-size: 0.8 * $font-size;
	font-weight: normal;

	.wp-block-jetpack-podcast-player.is-error & {
		display: block; // Show only when error occurs
	}

	span {
		color: $text-color;
	}

	a {
		color: inherit;
	}
}
